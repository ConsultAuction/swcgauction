[{"C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\index.js":"1","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\App.js":"2","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\layout\\Navbar.js":"3","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\pages\\Home.js":"4","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\auth\\Login.js":"5","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\auth\\Register.js":"6","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\context\\auth\\authContext.js":"7","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\context\\auth\\AuthState.js":"8","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\context\\types.js":"9","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\context\\auth\\authReducer.js":"10","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\forms\\ConsultantForm.js":"11","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\forms\\CompanyForm.js":"12","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\pages\\Project.js":"13","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\forms\\ProjectForm.js":"14","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\routing\\PrivateRoute.js":"15"},{"size":174,"mtime":1616151073819,"results":"16","hashOfConfig":"17"},{"size":925,"mtime":1616674904586,"results":"18","hashOfConfig":"17"},{"size":1713,"mtime":1616676352449,"results":"19","hashOfConfig":"17"},{"size":700,"mtime":1616671646853,"results":"20","hashOfConfig":"17"},{"size":1732,"mtime":1615911151660,"results":"21","hashOfConfig":"17"},{"size":1632,"mtime":1616151076855,"results":"22","hashOfConfig":"17"},{"size":111,"mtime":1615201200738,"results":"23","hashOfConfig":"17"},{"size":2400,"mtime":1616502585369,"results":"24","hashOfConfig":"17"},{"size":761,"mtime":1615201200739,"results":"25","hashOfConfig":"17"},{"size":1113,"mtime":1616503655447,"results":"26","hashOfConfig":"17"},{"size":7403,"mtime":1616149966217,"results":"27","hashOfConfig":"17"},{"size":4385,"mtime":1616149966223,"results":"28","hashOfConfig":"17"},{"size":201,"mtime":1616674029850,"results":"29","hashOfConfig":"17"},{"size":3759,"mtime":1616675968638,"results":"30","hashOfConfig":"17"},{"size":587,"mtime":1616673870957,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1cmmbs0",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\index.js",[],["65","66"],"C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\App.js",[],"C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\layout\\Navbar.js",[],"C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\pages\\Home.js",[],"C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\auth\\Login.js",[],"C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\auth\\Register.js",[],"C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\context\\auth\\authContext.js",[],"C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\context\\auth\\AuthState.js",[],"C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\context\\types.js",[],"C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\context\\auth\\authReducer.js",[],"C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\forms\\ConsultantForm.js",["67"],"import React, { Fragment, useState } from 'react';\r\nimport ReactFlagsSelect from 'react-flags-select';\r\n\r\nconst ConsultantForm = () => {\r\n  const [user, setUser] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    role: 'consultant',\r\n    password: '',\r\n    password2: '',\r\n    address: '',\r\n    zipCode: '',\r\n    city: '',\r\n    phoneNr: '',\r\n    frontEnd: false,\r\n    backEnd: false,\r\n    forHire: false,\r\n    salary: '',\r\n    experience: [],\r\n    skills: [],\r\n  });\r\n\r\n  const {\r\n    firstName,\r\n    lastName,\r\n    email,\r\n    role,\r\n    password,\r\n    password2,\r\n    address,\r\n    zipCode,\r\n    city,\r\n    phoneNr,\r\n    frontEnd,\r\n    backEnd,\r\n    forHire,\r\n    salary,\r\n    experience,\r\n    skills,\r\n  } = user;\r\n\r\n  const [selected, setSelected] = useState('');\r\n\r\n  const onChange = (e) => setUser({ ...user, [e.target.name]: e.target.value });\r\n  return (\r\n    <Fragment>\r\n      <div className='form-group'>\r\n        <div className='form-row'>\r\n          <div className='col'>\r\n            <label htmlFor='firstName'>First Name</label>\r\n            <input\r\n              className='form-control'\r\n              type='text'\r\n              name='firstName'\r\n              value={firstName}\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n          <div className='col'>\r\n            <label htmlFor='lastName'>Last Name</label>\r\n            <input\r\n              className='form-control'\r\n              type='text'\r\n              name='lastName'\r\n              value={lastName}\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='form-row'>\r\n        <div className='col'>\r\n          <label htmlFor='email'>Email Address</label>\r\n          <input\r\n            className='form-control'\r\n            type='email'\r\n            name='email'\r\n            value={email}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className='form-row'>\r\n        <div className='col'>\r\n          <label htmlFor='password'>Password</label>\r\n          <input\r\n            className='form-control'\r\n            type='password'\r\n            name='password'\r\n            value={password}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='col'>\r\n          <label htmlFor='password2'>Confirm Password</label>\r\n          <input\r\n            className='form-control'\r\n            type='password2'\r\n            name='password2'\r\n            value={password2}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='form-row'>\r\n        <div className='col'>\r\n          <label htmlFor='address'>Address</label>\r\n          <input\r\n            className='form-control'\r\n            type='text'\r\n            name='address'\r\n            value={address}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='form-row'>\r\n        <div className='col'>\r\n          <label htmlFor='zipCode'>Postal Code</label>\r\n          <input\r\n            className='form-control'\r\n            type='text'\r\n            name='zipCode'\r\n            value={zipCode}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='col'>\r\n          <label htmlFor='city'>City</label>\r\n          <input\r\n            className='form-control'\r\n            type='text'\r\n            name='city'\r\n            value={city}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='col'>\r\n          <label htmlFor='country'>Country</label>\r\n          <ReactFlagsSelect\r\n            selected={selected}\r\n            onSelect={(code) => setSelected(code)}\r\n          />\r\n        </div>\r\n      </div>\r\n      {/* ToDo: Snygga till f√§ltet med en landskodslista */}\r\n\r\n      <div className='form-row'>\r\n        <label htmlFor='phonenr'>Phone Number</label>\r\n        <input\r\n          className='form-control'\r\n          type='text'\r\n          name='phonenr'\r\n          value={phoneNr}\r\n          onChange={onChange}\r\n          required\r\n        />\r\n      </div>\r\n      <div className='form-group'>\r\n        <div className='form-row'>\r\n          <div className='form-check form-check-inline'>\r\n            <input\r\n              className='form-check-input'\r\n              type='checkbox'\r\n              name='frontEnd'\r\n              value={frontEnd}\r\n              onChange={onChange}\r\n            />\r\n            <label class='form-check-label' htmlFor='frontEnd'>\r\n              Front End\r\n            </label>\r\n          </div>{' '}\r\n          <div className='form-check form-check-inline'>\r\n            <input\r\n              className='form-check-input'\r\n              type='checkbox'\r\n              name='backEnd'\r\n              value={backEnd}\r\n              onChange={onChange}\r\n            />\r\n            <label class='form-check-label' htmlFor='backEnd'>\r\n              Back End\r\n            </label>\r\n          </div>{' '}\r\n          <div className='form-check form-check-inline'>\r\n            <input\r\n              className='form-check-input'\r\n              type='checkbox'\r\n              name='forHire'\r\n              value={forHire}\r\n              onChange={onChange}\r\n            />\r\n            <label class='form-check-label' htmlFor='avalibleHire'>\r\n              Avalible For Hire\r\n            </label>\r\n          </div>\r\n          <div className='col'>\r\n            <label htmlFor='minSalary'>Minimum Salary</label>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              name='salary'\r\n              value={salary}\r\n              onChange={onChange}\r\n              placeholder='SEK'\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='form-row'>\r\n          <label htmlFor='skills'>Previous Experience:</label>\r\n          <div className='input-group mb-3'>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              name='experience'\r\n              value={experience}\r\n              onChange={onChange}\r\n              placeholder='Add A Previous Experience'\r\n              aria-label='Add A Previous Experience'\r\n              aria-describedby='button-addon2'\r\n            />\r\n            <button\r\n              className='btn btn-outline-secondary'\r\n              type='button'\r\n              id='button-addon2'\r\n            >\r\n              Add\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className='form-row'>\r\n          <label htmlFor='skills'>Special Skills:</label>\r\n          <div className='input-group mb-3'>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              name='skills'\r\n              value={skills}\r\n              onChange={onChange}\r\n              placeholder='Add A Special Skill'\r\n              aria-label='Add A Special Skill'\r\n              aria-describedby='button-addon2'\r\n            />\r\n            <button\r\n              className='btn btn-outline-secondary'\r\n              type='button'\r\n              id='button-addon2'\r\n            >\r\n              Add\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ConsultantForm;\r\n","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\forms\\CompanyForm.js",["68"],"import React, { Fragment, useState } from 'react';\r\nimport ReactFlagsSelect from 'react-flags-select';\r\n\r\nconst CompanyForm = () => {\r\n  const [user, setUser] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    companyName: '',\r\n    email: '',\r\n    role: 'client',\r\n    password: '',\r\n    password2: '',\r\n    address: '',\r\n    zipCode: '',\r\n    city: '',\r\n    phoneNr: '',\r\n  });\r\n\r\n  const {\r\n    firstName,\r\n    lastName,\r\n    companyName,\r\n    email,\r\n    role,\r\n    password,\r\n    password2,\r\n    address,\r\n    zipCode,\r\n    city,\r\n    phoneNr,\r\n  } = user;\r\n\r\n  const [selected, setSelected] = useState('');\r\n\r\n  const onChange = (e) => setUser({ ...user, [e.target.name]: e.target.value });\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className='form-row'>\r\n        <div className='col'>\r\n          <label htmlFor='companyName'>Company Name</label>\r\n          <input\r\n            className='form-control'\r\n            type='text'\r\n            name='companyName'\r\n            value={companyName}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='form-row'>\r\n        <div className='col'>\r\n          <label htmlFor='firstName'>First Name</label>\r\n          <input\r\n            className='form-control'\r\n            type='text'\r\n            name='firstName'\r\n            value={firstName}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <div className='col'>\r\n          <label htmlFor='lastName'>Last Name</label>\r\n          <input\r\n            className='form-control'\r\n            type='text'\r\n            name='lastName'\r\n            value={lastName}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='form-row'>\r\n        <div className='col'>\r\n          <label htmlFor='email'>Email Address</label>\r\n          <input\r\n            className='form-control'\r\n            type='email'\r\n            name='email'\r\n            value={email}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className='form-row'>\r\n        <div className='col'>\r\n          <label htmlFor='password'>Password</label>\r\n          <input\r\n            className='form-control'\r\n            type='password'\r\n            name='password'\r\n            value={password}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='col'>\r\n          <label htmlFor='password2'>Confirm Password</label>\r\n          <input\r\n            className='form-control'\r\n            type='password2'\r\n            name='password2'\r\n            value={password2}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='form-row'>\r\n        <div className='col'>\r\n          <label htmlFor='address'>Address</label>\r\n          <input\r\n            className='form-control'\r\n            type='text'\r\n            name='address'\r\n            value={address}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='form-row'>\r\n        <div className='col'>\r\n          <label htmlFor='zipCode'>Postal Code</label>\r\n          <input\r\n            className='form-control'\r\n            type='text'\r\n            name='zipCode'\r\n            value={zipCode}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='col'>\r\n          <label htmlFor='city'>City</label>\r\n          <input\r\n            className='form-control'\r\n            type='text'\r\n            name='city'\r\n            value={city}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='col'>\r\n          <label htmlFor='country'>Country</label>\r\n          <ReactFlagsSelect\r\n            selected={selected}\r\n            onSelect={(code) => setSelected(code)}\r\n          />\r\n        </div>\r\n      </div>\r\n      {/* ToDo: Snygga till f√§ltet med en landskodslista */}\r\n\r\n      <div className='form-row'>\r\n        <label htmlFor='phonenr'>Phone Number</label>\r\n        <input\r\n          className='form-control'\r\n          type='text'\r\n          name='phonenr'\r\n          value={phoneNr}\r\n          onChange={onChange}\r\n          required\r\n        />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default CompanyForm;\r\n","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\pages\\Project.js",[],"C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\forms\\ProjectForm.js",["69","70"],"C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\routing\\PrivateRoute.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":28,"column":5,"nodeType":"77","messageId":"78","endLine":28,"endColumn":9},{"ruleId":"75","severity":1,"message":"76","line":24,"column":5,"nodeType":"77","messageId":"78","endLine":24,"endColumn":9},{"ruleId":"75","severity":1,"message":"79","line":1,"column":10,"nodeType":"77","messageId":"78","endLine":1,"endColumn":18},{"ruleId":"75","severity":1,"message":"80","line":43,"column":5,"nodeType":"77","messageId":"78","endLine":43,"endColumn":11},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'role' is assigned a value but never used.","Identifier","unusedVar","'Fragment' is defined but never used.","'userId' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
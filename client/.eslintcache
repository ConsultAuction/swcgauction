[{"C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\index.js":"1","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\App.js":"2","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\layout\\Navbar.js":"3","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\pages\\Home.js":"4","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\auth\\Login.js":"5","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\auth\\Register.js":"6","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\context\\auth\\authContext.js":"7","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\context\\auth\\AuthState.js":"8","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\context\\types.js":"9","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\context\\auth\\authReducer.js":"10","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\forms\\ConsultantForm.js":"11","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\forms\\CompanyForm.js":"12","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\pages\\Project.js":"13","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\forms\\ProjectForm.js":"14","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\routing\\PrivateRoute.js":"15","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\context\\profile\\profileContext.js":"16","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\context\\profile\\ProfileState.js":"17","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\context\\profile\\profileReducer.js":"18","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\pages\\Success.js":"19","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\pages\\ClientUserProfile.js":"20","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\pages\\ConsultantUserProfile.js":"21"},{"size":174,"mtime":1616151073819,"results":"22","hashOfConfig":"23"},{"size":1627,"mtime":1618413940174,"results":"24","hashOfConfig":"23"},{"size":2067,"mtime":1618413899301,"results":"25","hashOfConfig":"23"},{"size":700,"mtime":1616684667918,"results":"26","hashOfConfig":"23"},{"size":1732,"mtime":1615911151660,"results":"27","hashOfConfig":"23"},{"size":1424,"mtime":1618219118583,"results":"28","hashOfConfig":"23"},{"size":111,"mtime":1615201200738,"results":"29","hashOfConfig":"23"},{"size":2378,"mtime":1618337675277,"results":"30","hashOfConfig":"23"},{"size":638,"mtime":1617185214551,"results":"31","hashOfConfig":"23"},{"size":1111,"mtime":1618326805421,"results":"32","hashOfConfig":"23"},{"size":10455,"mtime":1618222953255,"results":"33","hashOfConfig":"23"},{"size":5475,"mtime":1618337698474,"results":"34","hashOfConfig":"23"},{"size":201,"mtime":1616674029850,"results":"35","hashOfConfig":"23"},{"size":3698,"mtime":1616684749800,"results":"36","hashOfConfig":"23"},{"size":587,"mtime":1616673870957,"results":"37","hashOfConfig":"23"},{"size":117,"mtime":1617181574973,"results":"38","hashOfConfig":"23"},{"size":1346,"mtime":1618337207353,"results":"39","hashOfConfig":"23"},{"size":872,"mtime":1617194030237,"results":"40","hashOfConfig":"23"},{"size":206,"mtime":1618221985595,"results":"41","hashOfConfig":"23"},{"size":7102,"mtime":1618414222896,"results":"42","hashOfConfig":"23"},{"size":18318,"mtime":1618413968965,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1cmmbs0",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\index.js",[],["90","91"],"C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\App.js",[],"C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\layout\\Navbar.js",[],"C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\pages\\Home.js",[],"C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\auth\\Login.js",[],"C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\auth\\Register.js",[],"C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\context\\auth\\authContext.js",[],"C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\context\\auth\\AuthState.js",[],"C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\context\\types.js",[],"C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\context\\auth\\authReducer.js",[],"C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\forms\\ConsultantForm.js",["92"],"import React, { Fragment, useState, useContext } from 'react';\r\nimport ReactFlagsSelect from 'react-flags-select';\r\nimport ProfileContext from '../../context/profile/profileContext';\r\n\r\nconst ConsultantForm = () => {\r\n  const profileContext = useContext(ProfileContext);\r\n  const {\r\n    addExperience,\r\n    deleteExperience,\r\n    addSkill,\r\n    deleteSkill,\r\n    experiences,\r\n    skills,\r\n  } = profileContext;\r\n\r\n  const [consultant, setConsultant] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    role: 'consultant',\r\n    password: '',\r\n    password2: '',\r\n    address: '',\r\n    zipCode: '',\r\n    city: '',\r\n    phoneNr: '',\r\n    frontEnd: false,\r\n    backEnd: false,\r\n    forHire: false,\r\n    salary: '',\r\n  });\r\n\r\n  const {\r\n    firstName,\r\n    lastName,\r\n    email,\r\n    role,\r\n    password,\r\n    password2,\r\n    address,\r\n    zipCode,\r\n    city,\r\n    phoneNr,\r\n    frontEnd,\r\n    backEnd,\r\n    forHire,\r\n    salary,\r\n  } = consultant;\r\n\r\n  const [experience, setExperience] = useState('');\r\n  const [skill, setSkill] = useState('');\r\n  const [selected, setSelected] = useState('');\r\n\r\n  const handleChangeExperience = (e) => {\r\n    setExperience(e.target.value);\r\n  };\r\n\r\n  const handleAddExperience = (e) => {\r\n    e.preventDefault();\r\n    addExperience(experience);\r\n    setExperience('');\r\n  };\r\n\r\n  const handleRemoveExperience = (index) => (e) => {\r\n    e.preventDefault();\r\n    deleteExperience(index);\r\n    setExperience('');\r\n  };\r\n\r\n  const handleChangeSkill = (e) => {\r\n    setSkill(e.target.value);\r\n  };\r\n\r\n  const handleAddSkills = (e) => {\r\n    e.preventDefault();\r\n    addSkill(skill);\r\n    setSkill('');\r\n  };\r\n\r\n  const handleRemoveSkill = (index) => (e) => {\r\n    e.preventDefault();\r\n    deleteSkill(index);\r\n    setSkill('');\r\n  };\r\n\r\n  const onChange = (e) =>\r\n    setConsultant({ ...consultant, [e.target.name]: e.target.value });\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className='form-group'>\r\n        <div className='form-row'>\r\n          <div className='col'>\r\n            <label htmlFor='firstName'>First Name</label>\r\n            <input\r\n              className='form-control'\r\n              type='text'\r\n              name='firstName'\r\n              value={firstName}\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n          <div className='col'>\r\n            <label htmlFor='lastName'>Last Name</label>\r\n            <input\r\n              className='form-control'\r\n              type='text'\r\n              name='lastName'\r\n              value={lastName}\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='form-row'>\r\n        <div className='col'>\r\n          <label htmlFor='email'>Email Address</label>\r\n          <input\r\n            className='form-control'\r\n            type='email'\r\n            name='email'\r\n            value={email}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className='form-row'>\r\n        <div className='col'>\r\n          <label htmlFor='password'>Password</label>\r\n          <input\r\n            className='form-control'\r\n            type='password'\r\n            name='password'\r\n            value={password}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <div className='col'>\r\n          <label htmlFor='password2'>Confirm Password</label>\r\n          <input\r\n            className='form-control'\r\n            type='password'\r\n            name='password2'\r\n            value={password2}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='form-row'>\r\n        <div className='col'>\r\n          <label htmlFor='address'>Address</label>\r\n          <input\r\n            className='form-control'\r\n            type='text'\r\n            name='address'\r\n            value={address}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='form-row'>\r\n        <div className='col'>\r\n          <label htmlFor='zipCode'>Postal Code</label>\r\n          <input\r\n            className='form-control'\r\n            type='text'\r\n            name='zipCode'\r\n            value={zipCode}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <div className='col'>\r\n          <label htmlFor='city'>City</label>\r\n          <input\r\n            className='form-control'\r\n            type='text'\r\n            name='city'\r\n            value={city}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <div className='col'>\r\n          <label htmlFor='country'>Country</label>\r\n          <ReactFlagsSelect\r\n            selected={selected}\r\n            onSelect={(code) => setSelected(code)}\r\n          />\r\n        </div>\r\n      </div>\r\n      {/* ToDo: Snygga till fältet med en landskodslista */}\r\n\r\n      <div className='form-row'>\r\n        <label htmlFor='phonenr'>Phone Number</label>\r\n        <input\r\n          className='form-control'\r\n          type='text'\r\n          name='phoneNr'\r\n          value={phoneNr}\r\n          onChange={onChange}\r\n        />\r\n      </div>\r\n      <div className='form-group'>\r\n        <div className='form-row'>\r\n          <div className='form-check form-check-inline'>\r\n            <input\r\n              className='form-check-input'\r\n              type='checkbox'\r\n              name='frontEnd'\r\n              value={frontEnd}\r\n              onChange={onChange}\r\n            />\r\n            <label className='form-check-label' htmlFor='frontEnd'>\r\n              Front End\r\n            </label>\r\n          </div>{' '}\r\n          <div className='form-check form-check-inline'>\r\n            <input\r\n              className='form-check-input'\r\n              type='checkbox'\r\n              name='backEnd'\r\n              value={backEnd}\r\n              onChange={onChange}\r\n            />\r\n            <label className='form-check-label' htmlFor='backEnd'>\r\n              Back End\r\n            </label>\r\n          </div>{' '}\r\n          <div className='form-check form-check-inline'>\r\n            <input\r\n              className='form-check-input'\r\n              type='checkbox'\r\n              name='forHire'\r\n              value={forHire}\r\n              onChange={onChange}\r\n            />\r\n            <label className='form-check-label' htmlFor='avalibleHire'>\r\n              Avalible For Hire\r\n            </label>\r\n          </div>\r\n          <div className='col'>\r\n            <label htmlFor='minSalary'>Minimum Salary</label>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              name='salary'\r\n              value={salary}\r\n              onChange={onChange}\r\n              placeholder='SEK'\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='form-row'>\r\n          <label htmlFor='skills'>Previous Experience:</label>\r\n          <div className='input-group mb-3'>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              name='experience'\r\n              value={experience}\r\n              placeholder='Add A Previous Experience'\r\n              onChange={handleChangeExperience}\r\n              aria-label='Add A Previous Experience'\r\n              aria-describedby='button-addon2'\r\n            />\r\n            <button\r\n              className='btn btn-outline-secondary'\r\n              type='button'\r\n              onClick={handleAddExperience}\r\n              id='button-addon2'\r\n            >\r\n              Add\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className='form-row'>\r\n          <ul className='list-group list-group-horizontal'>\r\n            {experiences.map((item, index) => (\r\n              <li\r\n                className='list-group-item'\r\n                key={index}\r\n                id={'experience' + index}\r\n              >\r\n                {item}{' '}\r\n                <span item={item.name}>\r\n                  <button\r\n                    className='btn btn-sm'\r\n                    onClick={handleRemoveExperience(index)}\r\n                  >\r\n                    x\r\n                  </button>\r\n                </span>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <div className='form-row'>\r\n          <label htmlFor='skills'>Programming Language:</label>\r\n          <div className='input-group mb-3'>\r\n            <select\r\n              className='form-select'\r\n              aria-label='Add a Programming Language'\r\n            >\r\n              <option selected>Select a Programming Language</option>\r\n              <option value='1'>C#</option>\r\n              <option value='2'>C++</option>\r\n              <option value='3'>Java</option>\r\n              <option value='4'>Javascript</option>\r\n            </select>\r\n\r\n            <button\r\n              className='btn btn-outline-secondary'\r\n              type='button'\r\n              id='button-addon2'\r\n            >\r\n              Add\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='form-row'>\r\n          <label htmlFor='skills'>Special Skills:</label>\r\n          <div className='input-group mb-3'>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              name='skill'\r\n              value={skill}\r\n              onChange={handleChangeSkill}\r\n              placeholder='Add A Special Skill'\r\n              aria-label='Add A Special Skill'\r\n              aria-describedby='button-addon2'\r\n            />\r\n            <button\r\n              className='btn btn-outline-secondary'\r\n              onClick={handleAddSkills}\r\n              type='button'\r\n              id='button-addon2'\r\n            >\r\n              Add\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className='form-row'>\r\n          <ul className='list-group list-group-horizontal'>\r\n            {skills.map((item, index) => (\r\n              <li className='list-group-item' key={index} id={'skill' + index}>\r\n                {item}{' '}\r\n                <span item={item.name}>\r\n                  <button\r\n                    className='btn btn-sm'\r\n                    onClick={handleRemoveSkill(index)}\r\n                  >\r\n                    x\r\n                  </button>\r\n                </span>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ConsultantForm;\r\n","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\forms\\CompanyForm.js",["93"],"import React, { useState } from 'react';\r\nimport ReactFlagsSelect from 'react-flags-select';\r\nimport axios from 'axios';\r\n\r\nconst CompanyForm = (props) => {\r\n  const [user, setUser] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    companyName: '',\r\n    email: '',\r\n    role: 'client',\r\n    password: '',\r\n    password2: '',\r\n    address: '',\r\n    zipCode: '',\r\n    city: '',\r\n    phoneNr: '',\r\n  });\r\n\r\n  const {\r\n    firstName,\r\n    lastName,\r\n    companyName,\r\n    email,\r\n    role,\r\n    password,\r\n    password2,\r\n    address,\r\n    zipCode,\r\n    city,\r\n    phoneNr,\r\n  } = user;\r\n\r\n  const [selected, setSelected] = useState('');\r\n\r\n  const onChange = (e) => setUser({ ...user, [e.target.name]: e.target.value });\r\n\r\n  const createClient = async (formData) => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    try {\r\n      await axios.post('/api/user/client', formData, config);\r\n      props.history.push('/registerSucess');\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventdefault();\r\n    createClient({\r\n      companyName,\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      password,\r\n      address,\r\n      zipCode,\r\n      city,\r\n      selected,\r\n      phoneNr,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={onSubmit}>\r\n        <div className='form-row'>\r\n          <div className='col'>\r\n            <label htmlFor='companyName'>Company Name</label>\r\n            <input\r\n              className='form-control'\r\n              type='text'\r\n              name='companyName'\r\n              value={companyName}\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='form-row'>\r\n          <div className='col'>\r\n            <label htmlFor='firstName'>First Name</label>\r\n            <input\r\n              className='form-control'\r\n              type='text'\r\n              name='firstName'\r\n              value={firstName}\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n          <div className='col'>\r\n            <label htmlFor='lastName'>Last Name</label>\r\n            <input\r\n              className='form-control'\r\n              type='text'\r\n              name='lastName'\r\n              value={lastName}\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='form-row'>\r\n          <div className='col'>\r\n            <label htmlFor='email'>Email Address</label>\r\n            <input\r\n              className='form-control'\r\n              type='email'\r\n              name='email'\r\n              value={email}\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className='form-row'>\r\n          <div className='col'>\r\n            <label htmlFor='password'>Password</label>\r\n            <input\r\n              className='form-control'\r\n              type='password'\r\n              name='password'\r\n              value={password}\r\n              onChange={onChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div className='col'>\r\n            <label htmlFor='password2'>Confirm Password</label>\r\n            <input\r\n              className='form-control'\r\n              type='password'\r\n              name='password2'\r\n              value={password2}\r\n              onChange={onChange}\r\n              required\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='form-row'>\r\n          <div className='col'>\r\n            <label htmlFor='address'>Address</label>\r\n            <input\r\n              className='form-control'\r\n              type='text'\r\n              name='address'\r\n              value={address}\r\n              onChange={onChange}\r\n              required\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='form-row'>\r\n          <div className='col'>\r\n            <label htmlFor='zipCode'>Postal Code</label>\r\n            <input\r\n              className='form-control'\r\n              type='text'\r\n              name='zipCode'\r\n              value={zipCode}\r\n              onChange={onChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div className='col'>\r\n            <label htmlFor='city'>City</label>\r\n            <input\r\n              className='form-control'\r\n              type='text'\r\n              name='city'\r\n              value={city}\r\n              onChange={onChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div className='col'>\r\n            <label htmlFor='country'>Country</label>\r\n            <ReactFlagsSelect\r\n              selected={selected}\r\n              onSelect={(code) => setSelected(code)}\r\n            />\r\n          </div>\r\n        </div>\r\n        {/* ToDo: Snygga till fältet med en landskodslista */}\r\n\r\n        <div className='form-row'>\r\n          <label htmlFor='phonenr'>Phone Number</label>\r\n          <input\r\n            className='form-control'\r\n            type='text'\r\n            name='phoneNr'\r\n            value={phoneNr}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n      </form>\r\n      <div className='form-group mt-4'>\r\n        <input\r\n          className='btn-lg btn-block btn-primary'\r\n          type='submit'\r\n          value='Submit'\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompanyForm;\r\n","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\pages\\Project.js",[],"C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\forms\\ProjectForm.js",[],"C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\routing\\PrivateRoute.js",[],"C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\context\\profile\\profileContext.js",[],"C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\context\\profile\\ProfileState.js",[],"C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\context\\profile\\profileReducer.js",["94","95"],"import {\r\n  ADD_EXPERIENCE,\r\n  REMOVE_EXPERIENCE,\r\n  UPDATE_EXPERIENCE,\r\n  ADD_SKILL,\r\n  REMOVE_SKILL,\r\n  UPDATE_SKILL,\r\n} from '../types';\r\n\r\nconst profileReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case ADD_EXPERIENCE:\r\n      return {\r\n        ...state,\r\n        experiences: [...state.experiences, action.payload],\r\n      };\r\n    case REMOVE_EXPERIENCE:\r\n      return {\r\n        ...state,\r\n        experiences: state.experiences.filter(\r\n          (s, sidx) => action.payload !== sidx\r\n        ),\r\n      };\r\n    case ADD_SKILL:\r\n      return {\r\n        ...state,\r\n        skills: [...state.skills, action.payload],\r\n      };\r\n    case REMOVE_SKILL:\r\n      return {\r\n        ...state,\r\n        skills: state.skills.filter((s, sidx) => action.payload !== sidx),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default profileReducer;\r\n","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\pages\\Success.js",[],"C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\pages\\ClientUserProfile.js",[],"C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\pages\\ConsultantUserProfile.js",[],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":37,"column":5,"nodeType":"102","messageId":"103","endLine":37,"endColumn":9},{"ruleId":"100","severity":1,"message":"101","line":25,"column":5,"nodeType":"102","messageId":"103","endLine":25,"endColumn":9},{"ruleId":"100","severity":1,"message":"104","line":4,"column":3,"nodeType":"102","messageId":"103","endLine":4,"endColumn":20},{"ruleId":"100","severity":1,"message":"105","line":7,"column":3,"nodeType":"102","messageId":"103","endLine":7,"endColumn":15},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"no-unused-vars","'role' is assigned a value but never used.","Identifier","unusedVar","'UPDATE_EXPERIENCE' is defined but never used.","'UPDATE_SKILL' is defined but never used.","no-global-assign","no-unsafe-negation"]
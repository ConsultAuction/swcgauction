[{"C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\index.js":"1","C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\App.js":"2","C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\utils\\setAuthToken.js":"3","C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\component\\layout\\Navbar.js":"4","C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\component\\auth\\Register.js":"5","C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\component\\pages\\Home.js":"6","C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\context\\auth\\AuthState.js":"7","C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\component\\auth\\Login.js":"8","C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\context\\auth\\authContext.js":"9","C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\context\\auth\\authReducer.js":"10","C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\context\\types.js":"11","C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\component\\forms\\CompanyForm.js":"12","C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\component\\forms\\ConsultantForm.js":"13","C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\component\\pages\\Project.js":"14","C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\component\\routing\\PrivateRoute.js":"15","C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\component\\forms\\ProjectForm.js":"16","C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\component\\Countdown.js":"17","C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\context\\countdown\\countdownContext.js":"18","C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\context\\countdown\\countdownState.js":"19","C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\context\\countdown\\countdownReducer.js":"20"},{"size":174,"mtime":1616500009125,"results":"21","hashOfConfig":"22"},{"size":1058,"mtime":1617889332241,"results":"23","hashOfConfig":"22"},{"size":249,"mtime":1614721790000,"results":"24","hashOfConfig":"22"},{"size":1713,"mtime":1616755726262,"results":"25","hashOfConfig":"22"},{"size":1425,"mtime":1617012465408,"results":"26","hashOfConfig":"22"},{"size":700,"mtime":1616755726263,"results":"27","hashOfConfig":"22"},{"size":2400,"mtime":1616755726265,"results":"28","hashOfConfig":"22"},{"size":1665,"mtime":1615456782903,"results":"29","hashOfConfig":"22"},{"size":106,"mtime":1614721790000,"results":"30","hashOfConfig":"22"},{"size":1113,"mtime":1616500009125,"results":"31","hashOfConfig":"22"},{"size":797,"mtime":1617886308754,"results":"32","hashOfConfig":"22"},{"size":4385,"mtime":1616500009121,"results":"33","hashOfConfig":"22"},{"size":10549,"mtime":1617184876662,"results":"34","hashOfConfig":"22"},{"size":261,"mtime":1617887496097,"results":"35","hashOfConfig":"22"},{"size":587,"mtime":1616755726265,"results":"36","hashOfConfig":"22"},{"size":3698,"mtime":1616755726261,"results":"37","hashOfConfig":"22"},{"size":1687,"mtime":1617911770802,"results":"38","hashOfConfig":"22"},{"size":119,"mtime":1617888438929,"results":"39","hashOfConfig":"22"},{"size":974,"mtime":1617889505726,"results":"40","hashOfConfig":"22"},{"size":271,"mtime":1617886435505,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1o0qyb3",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"44"},"C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\index.js",[],["88","89"],"C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\App.js",[],"C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\utils\\setAuthToken.js",[],["90","91"],"C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\component\\layout\\Navbar.js",[],"C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\component\\auth\\Register.js",[],"C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\component\\pages\\Home.js",[],"C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\context\\auth\\AuthState.js",["92"],"import React, { useReducer } from 'react';\r\nimport axios from 'axios';\r\nimport AuthContext from './authContext';\r\nimport AuthReducer from './authReducer';\r\nimport {\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n} from '../types';\r\n\r\nconst AuthState = (props) => {\r\n  \r\n  const initialState = {\r\n    isAuthenticated: false,\r\n    loading: true,\r\n    user: null,\r\n    userid: null,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(AuthReducer, initialState);\r\n\r\n  const { userid } = initialState;\r\n\r\n  // Load User\r\n  const loadUser = async () => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n    console.log(userid);\r\n\r\n    try {\r\n      const res = await axios.get(\r\n        '/api/user/' + localStorage.getItem('userid'),\r\n        config\r\n      );\r\n\r\n      dispatch({\r\n        type: USER_LOADED,\r\n        payload: res.data,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch({\r\n        type: AUTH_ERROR,\r\n      });\r\n    }\r\n  };\r\n\r\n  // Register User\r\n\r\n  // Login User\r\n  const login = async (formData) => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    try {\r\n      const res = await axios.post('/api/user/login', formData, config);\r\n      localStorage.clear();\r\n      localStorage.setItem('userid', res.headers.userid);\r\n\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: res.headers.userid,\r\n      });\r\n      localStorage.setItem('isAuthenticated', true);\r\n      loadUser();\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch({\r\n        type: LOGIN_FAIL,\r\n      });\r\n    }\r\n  };\r\n\r\n  // Logout\r\n  const logout = async () => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n    try {\r\n      const res = await axios.get('/api/user/logout', config);\r\n      dispatch({ type: LOGOUT });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  // Clear Errors\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        isAuthenticated: state.isAuthenticated,\r\n        loading: state.loading,\r\n        user: state.user,\r\n        userid: state.userid,\r\n        loadUser,\r\n        login,\r\n        logout,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthState;\r\n","C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\component\\auth\\Login.js",[],"C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\context\\auth\\authContext.js",[],"C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\context\\auth\\authReducer.js",[],"C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\context\\types.js",[],"C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\component\\forms\\CompanyForm.js",["93"],"import React, { Fragment, useState } from 'react';\r\nimport ReactFlagsSelect from 'react-flags-select';\r\n\r\nconst CompanyForm = () => {\r\n  const [user, setUser] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    companyName: '',\r\n    email: '',\r\n    role: 'client',\r\n    password: '',\r\n    password2: '',\r\n    address: '',\r\n    zipCode: '',\r\n    city: '',\r\n    phoneNr: '',\r\n  });\r\n\r\n  const {\r\n    firstName,\r\n    lastName,\r\n    companyName,\r\n    email,\r\n    role,\r\n    password,\r\n    password2,\r\n    address,\r\n    zipCode,\r\n    city,\r\n    phoneNr,\r\n  } = user;\r\n\r\n  const [selected, setSelected] = useState('');\r\n\r\n  const onChange = (e) => setUser({ ...user, [e.target.name]: e.target.value });\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className='form-row'>\r\n        <div className='col'>\r\n          <label htmlFor='companyName'>Company Name</label>\r\n          <input\r\n            className='form-control'\r\n            type='text'\r\n            name='companyName'\r\n            value={companyName}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='form-row'>\r\n        <div className='col'>\r\n          <label htmlFor='firstName'>First Name</label>\r\n          <input\r\n            className='form-control'\r\n            type='text'\r\n            name='firstName'\r\n            value={firstName}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <div className='col'>\r\n          <label htmlFor='lastName'>Last Name</label>\r\n          <input\r\n            className='form-control'\r\n            type='text'\r\n            name='lastName'\r\n            value={lastName}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='form-row'>\r\n        <div className='col'>\r\n          <label htmlFor='email'>Email Address</label>\r\n          <input\r\n            className='form-control'\r\n            type='email'\r\n            name='email'\r\n            value={email}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className='form-row'>\r\n        <div className='col'>\r\n          <label htmlFor='password'>Password</label>\r\n          <input\r\n            className='form-control'\r\n            type='password'\r\n            name='password'\r\n            value={password}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='col'>\r\n          <label htmlFor='password2'>Confirm Password</label>\r\n          <input\r\n            className='form-control'\r\n            type='password2'\r\n            name='password2'\r\n            value={password2}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='form-row'>\r\n        <div className='col'>\r\n          <label htmlFor='address'>Address</label>\r\n          <input\r\n            className='form-control'\r\n            type='text'\r\n            name='address'\r\n            value={address}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='form-row'>\r\n        <div className='col'>\r\n          <label htmlFor='zipCode'>Postal Code</label>\r\n          <input\r\n            className='form-control'\r\n            type='text'\r\n            name='zipCode'\r\n            value={zipCode}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='col'>\r\n          <label htmlFor='city'>City</label>\r\n          <input\r\n            className='form-control'\r\n            type='text'\r\n            name='city'\r\n            value={city}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='col'>\r\n          <label htmlFor='country'>Country</label>\r\n          <ReactFlagsSelect\r\n            selected={selected}\r\n            onSelect={(code) => setSelected(code)}\r\n          />\r\n        </div>\r\n      </div>\r\n      {/* ToDo: Snygga till fältet med en landskodslista */}\r\n\r\n      <div className='form-row'>\r\n        <label htmlFor='phonenr'>Phone Number</label>\r\n        <input\r\n          className='form-control'\r\n          type='text'\r\n          name='phonenr'\r\n          value={phoneNr}\r\n          onChange={onChange}\r\n          required\r\n        />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default CompanyForm;\r\n","C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\component\\forms\\ConsultantForm.js",["94","95","96","97","98"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport ReactFlagsSelect from 'react-flags-select';\r\n\r\nconst ConsultantForm = () => {\r\n  const initialState = {\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    role: 'consultant',\r\n    password: '',\r\n    password2: '',\r\n    address: '',\r\n    zipCode: '',\r\n    city: '',\r\n    phoneNr: '',\r\n    frontEnd: false,\r\n    backEnd: false,\r\n    forHire: false,\r\n    salary: '',\r\n    experiences: [],\r\n    languages: '',\r\n    skills: [],\r\n  };\r\n\r\n  const {\r\n    firstName,\r\n    lastName,\r\n    email,\r\n    role,\r\n    password,\r\n    password2,\r\n    address,\r\n    zipCode,\r\n    city,\r\n    phoneNr,\r\n    frontEnd,\r\n    backEnd,\r\n    forHire,\r\n    salary,\r\n    experiences,\r\n    languages,\r\n    skills,\r\n  } = initialState;\r\n\r\n  const [consultant, setConsultant] = useState(() => {\r\n    return initialState;\r\n  })\r\n  const [experience, setExperience] = useState('');\r\n  const [skill, setSkill] = useState('');\r\n\r\n  const [selected, setSelected] = useState('');\r\n\r\n  const handleChangeExperience = (e) => {\r\n    setExperience(e.target.value);\r\n  };\r\n\r\n  const handleAddExperience = () => {\r\n     const newConsultant = { ...consultant };\r\n    newConsultant.experiences = consultant.experiences.concat(experience);\r\n    setExperience('');\r\n    setConsultant(newConsultant);\r\n  };\r\n\r\n  const handleRemoveExperience = idx => () => {\r\n    const newConsultant = { ...consultant };\r\n    newConsultant.experiences = consultant.experiences.filter((s, sidx) => idx !== sidx);\r\n    setConsultant(newConsultant);\r\n  };\r\n\r\n  const handleChangeSkill = (e) => {\r\n    setSkill(e.target.value);\r\n  };\r\n\r\n  const handleAddSkills = () => {\r\n    const newConsultant = { ...consultant };\r\n    newConsultant.skills = consultant.skills.concat(skill);\r\n    setSkill('');\r\n    setConsultant(newConsultant);\r\n  };\r\n\r\n  const handleRemoveSkill = () => {};\r\n\r\n  const onChange = (e) =>\r\n    setConsultant({ ...consultant, [e.target.name]: e.target.value });\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className='form-group'>\r\n        <div className='form-row'>\r\n          <div className='col'>\r\n            <label htmlFor='firstName'>First Name</label>\r\n            <input\r\n              className='form-control'\r\n              type='text'\r\n              name='firstName'\r\n              value={firstName}\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n          <div className='col'>\r\n            <label htmlFor='lastName'>Last Name</label>\r\n            <input\r\n              className='form-control'\r\n              type='text'\r\n              name='lastName'\r\n              value={lastName}\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='form-row'>\r\n        <div className='col'>\r\n          <label htmlFor='email'>Email Address</label>\r\n          <input\r\n            className='form-control'\r\n            type='email'\r\n            name='email'\r\n            value={email}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className='form-row'>\r\n        <div className='col'>\r\n          <label htmlFor='password'>Password</label>\r\n          <input\r\n            className='form-control'\r\n            type='password'\r\n            name='password'\r\n            value={password}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='col'>\r\n          <label htmlFor='password2'>Confirm Password</label>\r\n          <input\r\n            className='form-control'\r\n            type='password2'\r\n            name='password2'\r\n            value={password2}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='form-row'>\r\n        <div className='col'>\r\n          <label htmlFor='address'>Address</label>\r\n          <input\r\n            className='form-control'\r\n            type='text'\r\n            name='address'\r\n            value={address}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='form-row'>\r\n        <div className='col'>\r\n          <label htmlFor='zipCode'>Postal Code</label>\r\n          <input\r\n            className='form-control'\r\n            type='text'\r\n            name='zipCode'\r\n            value={zipCode}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='col'>\r\n          <label htmlFor='city'>City</label>\r\n          <input\r\n            className='form-control'\r\n            type='text'\r\n            name='city'\r\n            value={city}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='col'>\r\n          <label htmlFor='country'>Country</label>\r\n          <ReactFlagsSelect\r\n            selected={selected}\r\n            onSelect={(code) => setSelected(code)}\r\n          />\r\n        </div>\r\n      </div>\r\n      {/* ToDo: Snygga till fältet med en landskodslista */}\r\n\r\n      <div className='form-row'>\r\n        <label htmlFor='phonenr'>Phone Number</label>\r\n        <input\r\n          className='form-control'\r\n          type='text'\r\n          name='phoneNr'\r\n          value={phoneNr}\r\n          onChange={onChange}\r\n          required\r\n        />\r\n      </div>\r\n      <div className='form-group'>\r\n        <div className='form-row'>\r\n          <div className='form-check form-check-inline'>\r\n            <input\r\n              className='form-check-input'\r\n              type='checkbox'\r\n              name='frontEnd'\r\n              value={frontEnd}\r\n              onChange={onChange}\r\n            />\r\n            <label class='form-check-label' htmlFor='frontEnd'>\r\n              Front End\r\n            </label>\r\n          </div>{' '}\r\n          <div className='form-check form-check-inline'>\r\n            <input\r\n              className='form-check-input'\r\n              type='checkbox'\r\n              name='backEnd'\r\n              value={backEnd}\r\n              onChange={onChange}\r\n            />\r\n            <label class='form-check-label' htmlFor='backEnd'>\r\n              Back End\r\n            </label>\r\n          </div>{' '}\r\n          <div className='form-check form-check-inline'>\r\n            <input\r\n              className='form-check-input'\r\n              type='checkbox'\r\n              name='forHire'\r\n              value={forHire}\r\n              onChange={onChange}\r\n            />\r\n            <label class='form-check-label' htmlFor='avalibleHire'>\r\n              Avalible For Hire\r\n            </label>\r\n          </div>\r\n          <div className='col'>\r\n            <label htmlFor='minSalary'>Minimum Salary</label>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              name='salary'\r\n              value={salary}\r\n              onChange={onChange}\r\n              placeholder='SEK'\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='form-row'>\r\n          <label htmlFor='skills'>Previous Experience:</label>\r\n          <div className='input-group mb-3'>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              name='experience'\r\n              value={experience}\r\n              placeholder='Add A Previous Experience'\r\n              onChange={handleChangeExperience}\r\n              aria-label='Add A Previous Experience'\r\n              aria-describedby='button-addon2'\r\n            />\r\n            <button\r\n              className='btn btn-outline-secondary'\r\n              type='button'\r\n              onClick={handleAddExperience}\r\n              id='button-addon2'\r\n            >\r\n              Add\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className='form-row'>\r\n          <ul className='list-group list-group-horizontal'>\r\n            {consultant.experiences.map((item, index) => (\r\n              <li\r\n                className='list-group-item'\r\n                key={index}\r\n                id={'experience' + index}\r\n              >\r\n                {item}\r\n                <button\r\n                  className='btn btn-danger btn-sm'\r\n                  onClick={handleRemoveExperience(index)}\r\n                >\r\n                  x\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <div className='form-row'>\r\n          <label htmlFor='skills'>Programming Language:</label>\r\n          <div className='input-group mb-3'>\r\n            <select\r\n              className='form-select'\r\n              aria-label='Add a Programming Language'\r\n            >\r\n              <option selected>Select a Programming Language</option>\r\n              <option value='1'>C#</option>\r\n              <option value='2'>C++</option>\r\n              <option value='3'>Java</option>\r\n              <option value='4'>Javascript</option>\r\n            </select>\r\n\r\n            <button\r\n              className='btn btn-outline-secondary'\r\n              type='button'\r\n              id='button-addon2'\r\n            >\r\n              Add\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='form-row'>\r\n          <label htmlFor='skills'>Special Skills:</label>\r\n          <div className='input-group mb-3'>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              name='skill'\r\n              value={skill}\r\n              onChange={handleChangeSkill}\r\n              placeholder='Add A Special Skill'\r\n              aria-label='Add A Special Skill'\r\n              aria-describedby='button-addon2'\r\n            />\r\n            <button\r\n              className='btn btn-outline-secondary'\r\n              onClick={handleAddSkills}\r\n              type='button'\r\n              id='button-addon2'\r\n            >\r\n              Add\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className='form-row'>\r\n          <ul className='list-group list-group-horizontal'>\r\n            {consultant.skills.map((item, index) => (\r\n              <li className='list-group-item' key={index} id={'skill' + index}>\r\n                {item}\r\n                <button\r\n                  className='btn btn-danger btn-sm'\r\n                  onClick={handleRemoveSkill}\r\n                >\r\n                  x\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ConsultantForm;\r\n","C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\component\\pages\\Project.js",[],"C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\component\\routing\\PrivateRoute.js",[],"C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\component\\forms\\ProjectForm.js",[],"C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\component\\Countdown.js",["99"],"C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\context\\countdown\\countdownContext.js",[],"C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\context\\countdown\\countdownState.js",[],"C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\context\\countdown\\countdownReducer.js",["100"],"import {\r\n  COUNTDOWN_LOADED,\r\n} from '../types';\r\n\r\nconst countdownReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case COUNTDOWN_LOADED:\r\n\r\n    return {\r\n      ...state,\r\n      countdown: action.payload\r\n    };\r\n  }\r\n};\r\n\r\nexport default countdownReducer;",{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"101","replacedBy":"105"},{"ruleId":"103","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":90,"column":13,"nodeType":"109","messageId":"110","endLine":90,"endColumn":16},{"ruleId":"107","severity":1,"message":"111","line":24,"column":5,"nodeType":"109","messageId":"110","endLine":24,"endColumn":9},{"ruleId":"107","severity":1,"message":"112","line":1,"column":37,"nodeType":"109","messageId":"110","endLine":1,"endColumn":46},{"ruleId":"107","severity":1,"message":"111","line":29,"column":5,"nodeType":"109","messageId":"110","endLine":29,"endColumn":9},{"ruleId":"107","severity":1,"message":"113","line":40,"column":5,"nodeType":"109","messageId":"110","endLine":40,"endColumn":16},{"ruleId":"107","severity":1,"message":"114","line":41,"column":5,"nodeType":"109","messageId":"110","endLine":41,"endColumn":14},{"ruleId":"107","severity":1,"message":"115","line":42,"column":5,"nodeType":"109","messageId":"110","endLine":42,"endColumn":11},{"ruleId":"116","severity":1,"message":"117","line":52,"column":8,"nodeType":"118","endLine":52,"endColumn":34,"suggestions":"119"},{"ruleId":"120","severity":1,"message":"121","line":6,"column":3,"nodeType":"122","messageId":"123","endLine":13,"endColumn":4},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],["124"],["125"],"no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar","'role' is assigned a value but never used.","'useEffect' is defined but never used.","'experiences' is assigned a value but never used.","'languages' is assigned a value but never used.","'skills' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'calculateTimeLeft'. Either include it or remove the dependency array.","ArrayExpression",["126"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},"Update the dependencies array to be: [calculateTimeLeft, countdown, loadCountdown]",{"range":"129","text":"130"},[1491,1517],"[calculateTimeLeft, countdown, loadCountdown]"]
[{"C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\index.js":"1","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\App.js":"2","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\pages\\Home.js":"3","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\auth\\Login.js":"4","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\auth\\Register.js":"5","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\context\\auth\\authContext.js":"6","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\context\\auth\\AuthState.js":"7","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\context\\types.js":"8","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\context\\auth\\authReducer.js":"9","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\forms\\ConsultantForm.js":"10","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\forms\\CompanyForm.js":"11","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\pages\\Project.js":"12","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\forms\\ProjectForm.js":"13","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\routing\\PrivateRoute.js":"14","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\context\\profile\\profileContext.js":"15","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\context\\profile\\ProfileState.js":"16","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\context\\profile\\profileReducer.js":"17","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\pages\\Success.js":"18","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\pages\\ClientUserProfile.js":"19","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\pages\\ConsultantUserProfile.js":"20","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\layout\\Navbar.js":"21","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\forms\\ProjectOfferForm.js":"22","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\context\\countdown\\countdownState.js":"23","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\context\\auction\\AuctionState.js":"24","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\pages\\ProjectOffers.jsx":"25","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\context\\auction\\AuctionContext.js":"26","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\Countdown.js":"27","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\context\\countdown\\countdownContext.js":"28","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\context\\countdown\\countdownReducer.js":"29","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\context\\auction\\AuctionReducer.js":"30","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\pages\\SearchbarDropdown.jsx":"31","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\pages\\ProjectOffer.jsx":"32","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\pages\\Projects.jsx":"33"},{"size":174,"mtime":1616151073819,"results":"34","hashOfConfig":"35"},{"size":3190,"mtime":1619618594499,"results":"36","hashOfConfig":"35"},{"size":706,"mtime":1619602280638,"results":"37","hashOfConfig":"35"},{"size":1732,"mtime":1615911151660,"results":"38","hashOfConfig":"35"},{"size":2541,"mtime":1619618594500,"results":"39","hashOfConfig":"35"},{"size":111,"mtime":1615201200738,"results":"40","hashOfConfig":"35"},{"size":3351,"mtime":1619619792025,"results":"41","hashOfConfig":"35"},{"size":887,"mtime":1619602280692,"results":"42","hashOfConfig":"35"},{"size":1113,"mtime":1619618594504,"results":"43","hashOfConfig":"35"},{"size":10455,"mtime":1618415135706,"results":"44","hashOfConfig":"35"},{"size":5475,"mtime":1618415149282,"results":"45","hashOfConfig":"35"},{"size":1231,"mtime":1619618613649,"results":"46","hashOfConfig":"35"},{"size":3698,"mtime":1619618775964,"results":"47","hashOfConfig":"35"},{"size":587,"mtime":1616673870957,"results":"48","hashOfConfig":"35"},{"size":117,"mtime":1617181574973,"results":"49","hashOfConfig":"35"},{"size":1346,"mtime":1618337207353,"results":"50","hashOfConfig":"35"},{"size":872,"mtime":1617194030237,"results":"51","hashOfConfig":"35"},{"size":206,"mtime":1618221985595,"results":"52","hashOfConfig":"35"},{"size":8595,"mtime":1619632620965,"results":"53","hashOfConfig":"35"},{"size":16371,"mtime":1619633800319,"results":"54","hashOfConfig":"35"},{"size":3094,"mtime":1619618613655,"results":"55","hashOfConfig":"35"},{"size":1721,"mtime":1619602280609,"results":"56","hashOfConfig":"35"},{"size":974,"mtime":1619602280691,"results":"57","hashOfConfig":"35"},{"size":1735,"mtime":1619602280676,"results":"58","hashOfConfig":"35"},{"size":1281,"mtime":1619602280652,"results":"59","hashOfConfig":"35"},{"size":115,"mtime":1619602280673,"results":"60","hashOfConfig":"35"},{"size":1479,"mtime":1619602280579,"results":"61","hashOfConfig":"35"},{"size":119,"mtime":1619602280682,"results":"62","hashOfConfig":"35"},{"size":308,"mtime":1619602280689,"results":"63","hashOfConfig":"35"},{"size":691,"mtime":1619602280674,"results":"64","hashOfConfig":"35"},{"size":1553,"mtime":1619602820306,"results":"65","hashOfConfig":"35"},{"size":2107,"mtime":1619602820298,"results":"66","hashOfConfig":"35"},{"size":1089,"mtime":1619602820302,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1cmmbs0",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"90"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"70"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"70"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"70"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"70"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"70"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"70"},"C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\index.js",[],["146","147"],"C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\App.js",[],"C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\pages\\Home.js",[],"C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\auth\\Login.js",[],"C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\auth\\Register.js",[],"C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\context\\auth\\authContext.js",[],"C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\context\\auth\\AuthState.js",[],"C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\context\\types.js",[],"C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\context\\auth\\authReducer.js",[],"C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\forms\\ConsultantForm.js",["148"],"import React, { Fragment, useState, useContext } from 'react';\r\nimport ReactFlagsSelect from 'react-flags-select';\r\nimport ProfileContext from '../../context/profile/profileContext';\r\n\r\nconst ConsultantForm = () => {\r\n  const profileContext = useContext(ProfileContext);\r\n  const {\r\n    addExperience,\r\n    deleteExperience,\r\n    addSkill,\r\n    deleteSkill,\r\n    experiences,\r\n    skills,\r\n  } = profileContext;\r\n\r\n  const [consultant, setConsultant] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    role: 'consultant',\r\n    password: '',\r\n    password2: '',\r\n    address: '',\r\n    zipCode: '',\r\n    city: '',\r\n    phoneNr: '',\r\n    frontEnd: false,\r\n    backEnd: false,\r\n    forHire: false,\r\n    salary: '',\r\n  });\r\n\r\n  const {\r\n    firstName,\r\n    lastName,\r\n    email,\r\n    role,\r\n    password,\r\n    password2,\r\n    address,\r\n    zipCode,\r\n    city,\r\n    phoneNr,\r\n    frontEnd,\r\n    backEnd,\r\n    forHire,\r\n    salary,\r\n  } = consultant;\r\n\r\n  const [experience, setExperience] = useState('');\r\n  const [skill, setSkill] = useState('');\r\n  const [selected, setSelected] = useState('');\r\n\r\n  const handleChangeExperience = (e) => {\r\n    setExperience(e.target.value);\r\n  };\r\n\r\n  const handleAddExperience = (e) => {\r\n    e.preventDefault();\r\n    addExperience(experience);\r\n    setExperience('');\r\n  };\r\n\r\n  const handleRemoveExperience = (index) => (e) => {\r\n    e.preventDefault();\r\n    deleteExperience(index);\r\n    setExperience('');\r\n  };\r\n\r\n  const handleChangeSkill = (e) => {\r\n    setSkill(e.target.value);\r\n  };\r\n\r\n  const handleAddSkills = (e) => {\r\n    e.preventDefault();\r\n    addSkill(skill);\r\n    setSkill('');\r\n  };\r\n\r\n  const handleRemoveSkill = (index) => (e) => {\r\n    e.preventDefault();\r\n    deleteSkill(index);\r\n    setSkill('');\r\n  };\r\n\r\n  const onChange = (e) =>\r\n    setConsultant({ ...consultant, [e.target.name]: e.target.value });\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className='form-group'>\r\n        <div className='form-row'>\r\n          <div className='col'>\r\n            <label htmlFor='firstName'>First Name</label>\r\n            <input\r\n              className='form-control'\r\n              type='text'\r\n              name='firstName'\r\n              value={firstName}\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n          <div className='col'>\r\n            <label htmlFor='lastName'>Last Name</label>\r\n            <input\r\n              className='form-control'\r\n              type='text'\r\n              name='lastName'\r\n              value={lastName}\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='form-row'>\r\n        <div className='col'>\r\n          <label htmlFor='email'>Email Address</label>\r\n          <input\r\n            className='form-control'\r\n            type='email'\r\n            name='email'\r\n            value={email}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className='form-row'>\r\n        <div className='col'>\r\n          <label htmlFor='password'>Password</label>\r\n          <input\r\n            className='form-control'\r\n            type='password'\r\n            name='password'\r\n            value={password}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <div className='col'>\r\n          <label htmlFor='password2'>Confirm Password</label>\r\n          <input\r\n            className='form-control'\r\n            type='password'\r\n            name='password2'\r\n            value={password2}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='form-row'>\r\n        <div className='col'>\r\n          <label htmlFor='address'>Address</label>\r\n          <input\r\n            className='form-control'\r\n            type='text'\r\n            name='address'\r\n            value={address}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='form-row'>\r\n        <div className='col'>\r\n          <label htmlFor='zipCode'>Postal Code</label>\r\n          <input\r\n            className='form-control'\r\n            type='text'\r\n            name='zipCode'\r\n            value={zipCode}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <div className='col'>\r\n          <label htmlFor='city'>City</label>\r\n          <input\r\n            className='form-control'\r\n            type='text'\r\n            name='city'\r\n            value={city}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <div className='col'>\r\n          <label htmlFor='country'>Country</label>\r\n          <ReactFlagsSelect\r\n            selected={selected}\r\n            onSelect={(code) => setSelected(code)}\r\n          />\r\n        </div>\r\n      </div>\r\n      {/* ToDo: Snygga till fältet med en landskodslista */}\r\n\r\n      <div className='form-row'>\r\n        <label htmlFor='phonenr'>Phone Number</label>\r\n        <input\r\n          className='form-control'\r\n          type='text'\r\n          name='phoneNr'\r\n          value={phoneNr}\r\n          onChange={onChange}\r\n        />\r\n      </div>\r\n      <div className='form-group'>\r\n        <div className='form-row'>\r\n          <div className='form-check form-check-inline'>\r\n            <input\r\n              className='form-check-input'\r\n              type='checkbox'\r\n              name='frontEnd'\r\n              value={frontEnd}\r\n              onChange={onChange}\r\n            />\r\n            <label className='form-check-label' htmlFor='frontEnd'>\r\n              Front End\r\n            </label>\r\n          </div>{' '}\r\n          <div className='form-check form-check-inline'>\r\n            <input\r\n              className='form-check-input'\r\n              type='checkbox'\r\n              name='backEnd'\r\n              value={backEnd}\r\n              onChange={onChange}\r\n            />\r\n            <label className='form-check-label' htmlFor='backEnd'>\r\n              Back End\r\n            </label>\r\n          </div>{' '}\r\n          <div className='form-check form-check-inline'>\r\n            <input\r\n              className='form-check-input'\r\n              type='checkbox'\r\n              name='forHire'\r\n              value={forHire}\r\n              onChange={onChange}\r\n            />\r\n            <label className='form-check-label' htmlFor='avalibleHire'>\r\n              Avalible For Hire\r\n            </label>\r\n          </div>\r\n          <div className='col'>\r\n            <label htmlFor='minSalary'>Minimum Salary</label>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              name='salary'\r\n              value={salary}\r\n              onChange={onChange}\r\n              placeholder='SEK'\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='form-row'>\r\n          <label htmlFor='skills'>Previous Experience:</label>\r\n          <div className='input-group mb-3'>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              name='experience'\r\n              value={experience}\r\n              placeholder='Add A Previous Experience'\r\n              onChange={handleChangeExperience}\r\n              aria-label='Add A Previous Experience'\r\n              aria-describedby='button-addon2'\r\n            />\r\n            <button\r\n              className='btn btn-outline-secondary'\r\n              type='button'\r\n              onClick={handleAddExperience}\r\n              id='button-addon2'\r\n            >\r\n              Add\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className='form-row'>\r\n          <ul className='list-group list-group-horizontal'>\r\n            {experiences.map((item, index) => (\r\n              <li\r\n                className='list-group-item'\r\n                key={index}\r\n                id={'experience' + index}\r\n              >\r\n                {item}{' '}\r\n                <span item={item.name}>\r\n                  <button\r\n                    className='btn btn-sm'\r\n                    onClick={handleRemoveExperience(index)}\r\n                  >\r\n                    x\r\n                  </button>\r\n                </span>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <div className='form-row'>\r\n          <label htmlFor='skills'>Programming Language:</label>\r\n          <div className='input-group mb-3'>\r\n            <select\r\n              className='form-select'\r\n              aria-label='Add a Programming Language'\r\n            >\r\n              <option selected>Select a Programming Language</option>\r\n              <option value='1'>C#</option>\r\n              <option value='2'>C++</option>\r\n              <option value='3'>Java</option>\r\n              <option value='4'>Javascript</option>\r\n            </select>\r\n\r\n            <button\r\n              className='btn btn-outline-secondary'\r\n              type='button'\r\n              id='button-addon2'\r\n            >\r\n              Add\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='form-row'>\r\n          <label htmlFor='skills'>Special Skills:</label>\r\n          <div className='input-group mb-3'>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              name='skill'\r\n              value={skill}\r\n              onChange={handleChangeSkill}\r\n              placeholder='Add A Special Skill'\r\n              aria-label='Add A Special Skill'\r\n              aria-describedby='button-addon2'\r\n            />\r\n            <button\r\n              className='btn btn-outline-secondary'\r\n              onClick={handleAddSkills}\r\n              type='button'\r\n              id='button-addon2'\r\n            >\r\n              Add\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className='form-row'>\r\n          <ul className='list-group list-group-horizontal'>\r\n            {skills.map((item, index) => (\r\n              <li className='list-group-item' key={index} id={'skill' + index}>\r\n                {item}{' '}\r\n                <span item={item.name}>\r\n                  <button\r\n                    className='btn btn-sm'\r\n                    onClick={handleRemoveSkill(index)}\r\n                  >\r\n                    x\r\n                  </button>\r\n                </span>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ConsultantForm;\r\n",["149","150"],"C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\forms\\CompanyForm.js",["151"],"import React, { useState } from 'react';\r\nimport ReactFlagsSelect from 'react-flags-select';\r\nimport axios from 'axios';\r\n\r\nconst CompanyForm = (props) => {\r\n  const [user, setUser] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    companyName: '',\r\n    email: '',\r\n    role: 'client',\r\n    password: '',\r\n    password2: '',\r\n    address: '',\r\n    zipCode: '',\r\n    city: '',\r\n    phoneNr: '',\r\n  });\r\n\r\n  const {\r\n    firstName,\r\n    lastName,\r\n    companyName,\r\n    email,\r\n    role,\r\n    password,\r\n    password2,\r\n    address,\r\n    zipCode,\r\n    city,\r\n    phoneNr,\r\n  } = user;\r\n\r\n  const [selected, setSelected] = useState('');\r\n\r\n  const onChange = (e) => setUser({ ...user, [e.target.name]: e.target.value });\r\n\r\n  const createClient = async (formData) => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    try {\r\n      await axios.post('/api/user/client', formData, config);\r\n      props.history.push('/registerSucess');\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventdefault();\r\n    createClient({\r\n      companyName,\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      password,\r\n      address,\r\n      zipCode,\r\n      city,\r\n      selected,\r\n      phoneNr,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={onSubmit}>\r\n        <div className='form-row'>\r\n          <div className='col'>\r\n            <label htmlFor='companyName'>Company Name</label>\r\n            <input\r\n              className='form-control'\r\n              type='text'\r\n              name='companyName'\r\n              value={companyName}\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='form-row'>\r\n          <div className='col'>\r\n            <label htmlFor='firstName'>First Name</label>\r\n            <input\r\n              className='form-control'\r\n              type='text'\r\n              name='firstName'\r\n              value={firstName}\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n          <div className='col'>\r\n            <label htmlFor='lastName'>Last Name</label>\r\n            <input\r\n              className='form-control'\r\n              type='text'\r\n              name='lastName'\r\n              value={lastName}\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='form-row'>\r\n          <div className='col'>\r\n            <label htmlFor='email'>Email Address</label>\r\n            <input\r\n              className='form-control'\r\n              type='email'\r\n              name='email'\r\n              value={email}\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className='form-row'>\r\n          <div className='col'>\r\n            <label htmlFor='password'>Password</label>\r\n            <input\r\n              className='form-control'\r\n              type='password'\r\n              name='password'\r\n              value={password}\r\n              onChange={onChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div className='col'>\r\n            <label htmlFor='password2'>Confirm Password</label>\r\n            <input\r\n              className='form-control'\r\n              type='password'\r\n              name='password2'\r\n              value={password2}\r\n              onChange={onChange}\r\n              required\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='form-row'>\r\n          <div className='col'>\r\n            <label htmlFor='address'>Address</label>\r\n            <input\r\n              className='form-control'\r\n              type='text'\r\n              name='address'\r\n              value={address}\r\n              onChange={onChange}\r\n              required\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='form-row'>\r\n          <div className='col'>\r\n            <label htmlFor='zipCode'>Postal Code</label>\r\n            <input\r\n              className='form-control'\r\n              type='text'\r\n              name='zipCode'\r\n              value={zipCode}\r\n              onChange={onChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div className='col'>\r\n            <label htmlFor='city'>City</label>\r\n            <input\r\n              className='form-control'\r\n              type='text'\r\n              name='city'\r\n              value={city}\r\n              onChange={onChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div className='col'>\r\n            <label htmlFor='country'>Country</label>\r\n            <ReactFlagsSelect\r\n              selected={selected}\r\n              onSelect={(code) => setSelected(code)}\r\n            />\r\n          </div>\r\n        </div>\r\n        {/* ToDo: Snygga till fältet med en landskodslista */}\r\n\r\n        <div className='form-row'>\r\n          <label htmlFor='phonenr'>Phone Number</label>\r\n          <input\r\n            className='form-control'\r\n            type='text'\r\n            name='phoneNr'\r\n            value={phoneNr}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n      </form>\r\n      <div className='form-group mt-4'>\r\n        <input\r\n          className='btn-lg btn-block btn-primary'\r\n          type='submit'\r\n          value='Submit'\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompanyForm;\r\n","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\pages\\Project.js",["152","153","154","155","156","157"],"import React, { Fragment, useContext, useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AuctionContext from '../../context/auction/AuctionContext';\r\nimport Countdown from '../Countdown';\r\nimport ProjectForm from '../forms/ProjectForm';\r\nimport SearchbarDropdown from './SearchbarDropdown';\r\nimport axios from 'axios';\r\n\r\nconst Project = () => {\r\n  const auctionContext = useContext(AuctionContext);\r\n  const { loadAllProject, allProjects } = auctionContext;\r\n  const [clientId, setClientId] = useState(localStorage.getItem('userid'));\r\n\r\n  useEffect(() => {\r\n    loadAllProject(clientId);\r\n    console.log(allProjects);\r\n  }, [clientId]);\r\n  return (\r\n    <Fragment>\r\n      {/* <Countdown /> */}\r\n      <div>\r\n        {allProjects ? (\r\n          allProjects.map((project) => (\r\n            <Link\r\n              to={{\r\n                pathname: '/createProject',\r\n                state: {\r\n                  linkedProject: project,\r\n                },\r\n              }}\r\n            >\r\n              <p>{project.projectName}</p>\r\n            </Link>\r\n          ))\r\n        ) : (\r\n          <p>No projects found</p>\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\forms\\ProjectForm.js",[],"C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\routing\\PrivateRoute.js",[],"C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\context\\profile\\profileContext.js",[],"C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\context\\profile\\ProfileState.js",[],"C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\context\\profile\\profileReducer.js",["158","159"],"import {\r\n  ADD_EXPERIENCE,\r\n  REMOVE_EXPERIENCE,\r\n  UPDATE_EXPERIENCE,\r\n  ADD_SKILL,\r\n  REMOVE_SKILL,\r\n  UPDATE_SKILL,\r\n} from '../types';\r\n\r\nconst profileReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case ADD_EXPERIENCE:\r\n      return {\r\n        ...state,\r\n        experiences: [...state.experiences, action.payload],\r\n      };\r\n    case REMOVE_EXPERIENCE:\r\n      return {\r\n        ...state,\r\n        experiences: state.experiences.filter(\r\n          (s, sidx) => action.payload !== sidx\r\n        ),\r\n      };\r\n    case ADD_SKILL:\r\n      return {\r\n        ...state,\r\n        skills: [...state.skills, action.payload],\r\n      };\r\n    case REMOVE_SKILL:\r\n      return {\r\n        ...state,\r\n        skills: state.skills.filter((s, sidx) => action.payload !== sidx),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default profileReducer;\r\n","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\pages\\Success.js",[],"C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\pages\\ClientUserProfile.js",["160"],"C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\pages\\ConsultantUserProfile.js",["161","162"],"C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\layout\\Navbar.js",[],"C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\forms\\ProjectOfferForm.js",["163","164"],"import { Fragment, useContext, useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport AuctionContext from '../../context/auction/AuctionContext';\r\n\r\nconst ProjectOfferForm = (props) => {\r\n  const auctionContext = useContext(AuctionContext);\r\n  const { sendOffer } = auctionContext;\r\n  const [isNew, setIsNew] = useState(true);\r\n\r\n  const { register, handleSubmit } = useForm();\r\n\r\n  const onSubmit = (data) => {\r\n    sendOffer(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.location.state != null) {\r\n      setIsNew(false);\r\n    }\r\n  });\r\n\r\n  console.log(props);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <label htmlFor='consultantId'>consultantId</label>\r\n      <input\r\n        type='text'\r\n        name='consultantId'\r\n        defaultValue={isNew ? '' : props.location.state.userId}\r\n        ref={register({ required: true })}\r\n      />\r\n\r\n      <label htmlFor='projectId'>projectId</label>\r\n      <input\r\n        type='text'\r\n        name='projectId'\r\n        defaultValue={isNew ? '' : props.location.state.projectId}\r\n        ref={register({ required: true })}\r\n      />\r\n\r\n      <label htmlFor='startTime'>startTime</label>\r\n      <input\r\n        type='date'\r\n        name='startTime'\r\n        defaultValue={isNew ? '' : ''}\r\n        ref={register({ required: true })}\r\n      />\r\n\r\n      <label htmlFor='bids'>bids</label>\r\n      <input\r\n        type='number'\r\n        min='0'\r\n        name='bids'\r\n        defaultValue={isNew ? '' : ''}\r\n        ref={register({ required: true })}\r\n      />\r\n      <button className='btn btn-success' type='submit'>\r\n        Send project offer\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\nexport default ProjectOfferForm;\r\n","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\context\\countdown\\countdownState.js",[],"C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\context\\auction\\AuctionState.js",[],"C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\pages\\ProjectOffers.jsx",["165"],"import axios from 'axios';\r\nimport React, { useState, useEffect, useContext, Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ProjectOffers = (props) => {\r\n  const [offers, setOffers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`/api/projectOffer/user/` + localStorage.getItem('userid'))\r\n      .then((res) => {\r\n        setOffers(res.data);\r\n      });\r\n  }, []);\r\n\r\n  console.log(offers);\r\n  return (\r\n    <Fragment>\r\n      {offers ? (\r\n        offers.map((offer) => (\r\n          <Link\r\n            to={{\r\n              pathname: '/ProjectOffer',\r\n              state: {\r\n                projectOffer: offer,\r\n              },\r\n            }}\r\n          >\r\n            <div key={offer.offerId}>\r\n              <p>Name: {offer.projectName}</p>\r\n              <p>Description: {offer.description}</p>\r\n              <p>Start date: {offer.startDate}</p>\r\n              <p>End date: {offer.endDate}</p>\r\n              {offer.bids.map((bid) => (\r\n                <Fragment>\r\n                  <p>Bid: {bid.price}</p>\r\n                </Fragment>\r\n              ))}\r\n            </div>\r\n          </Link>\r\n        ))\r\n      ) : (\r\n        <p>No projects offers found</p>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ProjectOffers;\r\n","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\context\\auction\\AuctionContext.js",[],"C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\Countdown.js",["166","167","168"],"import React, { Fragment, useContext, useEffect, useState } from 'react';\r\nimport moment from 'moment';\r\nimport axios from 'axios';\r\n\r\nconst Countdown = () => {\r\n  const [endDate, setEndDate] = useState();\r\n\r\n  const [days, setDays] = useState('00');\r\n  const [hours, setHours] = useState('00');\r\n  const [minutes, setMinutes] = useState('00');\r\n  const [seconds, setSeconds] = useState('00');\r\n\r\n  const calculateTimeLeft = () => {\r\n    const then = moment(endDate);\r\n    const now = moment();\r\n    const countdown = moment(then - now);\r\n    const days = countdown.format('D');\r\n    const hours = countdown.format('HH');\r\n    const minutes = countdown.format('mm');\r\n    const seconds = countdown.format('ss');\r\n\r\n    setDays(days);\r\n    setHours(hours);\r\n    setMinutes(minutes);\r\n    setSeconds(seconds);\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get('/api/auction')\r\n      .then((res) => {\r\n        setEndDate(new Date(res.data.auctionEndDateTime));\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n    let intervalId;\r\n\r\n    intervalId = setInterval(() => {\r\n      calculateTimeLeft();\r\n    }, 1000);\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    calculateTimeLeft();\r\n    console.log(endDate);\r\n  }, [calculateTimeLeft]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <p>\r\n        {' '}\r\n        {days}:{hours}:{minutes}:{seconds}{' '}\r\n      </p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Countdown;\r\n","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\context\\countdown\\countdownContext.js",[],"C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\context\\countdown\\countdownReducer.js",[],"C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\context\\auction\\AuctionReducer.js",["169"],"import {\r\n    LOAD_PROJECT,\r\n    LOAD_ALL_PROJECTS,\r\n    ADD_PROJECT,\r\n    DELETE_PROJECT\r\n  } from '../types';\r\n  \r\n  const auctionReducer = (state, action) => {\r\n    switch (action.type) {\r\n      case LOAD_PROJECT:\r\n  \r\n      return {\r\n        ...state,\r\n        project: action.payload,\r\n        loading: false\r\n      };\r\n\r\n      case LOAD_ALL_PROJECTS:\r\n  \r\n      return {\r\n        ...state,\r\n        allProjects: action.payload,\r\n        loading: false\r\n      };\r\n\r\n      case ADD_PROJECT:\r\n  \r\n      return {\r\n        ...state,\r\n        project: action.payload,\r\n        loading: false\r\n      };\r\n\r\n      default:\r\n      return state;\r\n    }\r\n  };\r\n  \r\n  export default auctionReducer;","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\pages\\SearchbarDropdown.jsx",[],"C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\pages\\ProjectOffer.jsx",["170"],"import axios from 'axios';\r\nimport { Fragment, useEffect, useState } from 'react';\r\n\r\nconst ProjectOffer = (props) => {\r\n  const [offer, setOffer] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (props.location.state) {\r\n      setOffer(props.location.state.projectOffer);\r\n      console.log(offer);\r\n    }\r\n  }, []);\r\n\r\n  const onAccept = () => {\r\n    axios\r\n      .post('/api/projectOffer/accepted/' + offer.projectOfferId)\r\n      .then((res) => {\r\n        setOffer({ ...offer, accepted: res.data.accepted });\r\n      })\r\n      .catch((error) => {\r\n        console.log(console.log(error));\r\n      });\r\n  };\r\n\r\n  const onReject = () => {\r\n    axios\r\n      .post('/api/projectOffer/rejected/' + offer.projectOfferId)\r\n      .then((res) => {\r\n        setOffer({ ...offer, rejected: res.data.rejected });\r\n      })\r\n      .catch((error) => {\r\n        console.log(console.log(error));\r\n      });\r\n  };\r\n\r\n  console.log(offer);\r\n\r\n  return (\r\n    <Fragment>\r\n      {offer ? (\r\n        <Fragment>\r\n          <p>Project name: {offer.projectName}</p>\r\n          <p>Start date: {offer.startDate}</p>\r\n          <p>End date: {offer.endDate}</p>\r\n          <p>Workload: {offer.workLoad}</p>\r\n          <p>Description: {offer.description}</p>\r\n          <p>Located: {offer.located}</p>\r\n          <p>Distance work: {offer.distanceWork ? 'Yes' : 'No'}</p>\r\n          <p>Company hardware: {offer.companyHardware ? 'Yes' : 'No'}</p>\r\n          <p>Contact name: {offer.contactName}</p>\r\n          <p>Contact email: {offer.contactEmail}</p>\r\n          <p>Contact phone number: {offer.contactPhoneNumber}</p>\r\n\r\n          {offer.accepted || offer.rejected ? (\r\n            offer.accepted ? (\r\n              <p>Offer is accepted</p>\r\n            ) : (\r\n              <p>Offer is rejected</p>\r\n            )\r\n          ) : (\r\n            <div>\r\n              <button onClick={onAccept}>Accept</button>\r\n              <button onClick={onReject}>Reject</button>\r\n            </div>\r\n          )}\r\n        </Fragment>\r\n      ) : (\r\n        <p>No found Offer</p>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ProjectOffer;\r\n","C:\\Users\\John\\Documents\\Java\\swcgauction\\client\\src\\component\\pages\\Projects.jsx",["171","172"],"import axios from 'axios';\r\nimport React, { Fragment, useContext, useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AuctionContext from '../../context/auction/AuctionContext';\r\n\r\nconst Projects = (props) => {\r\n  const [clientId] = useState(localStorage.getItem('userid'));\r\n  const auctionContext = useContext(AuctionContext);\r\n  const { loadAllProject, allProjects } = auctionContext;\r\n\r\n  useEffect(() => {\r\n    loadAllProject(clientId);\r\n  }, [clientId]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div>\r\n        {allProjects ? (\r\n          allProjects.map((project) => (\r\n            <Link\r\n              to={{\r\n                pathname: '/projectOfferForm',\r\n                state: {\r\n                  userId: props.location.user.userId,\r\n                  projectId: project.projectId,\r\n                },\r\n              }}\r\n            >\r\n              <p>{project.projectName}</p>\r\n            </Link>\r\n          ))\r\n        ) : (\r\n          <p>No projects found</p>\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n",{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","severity":1,"message":"178","line":37,"column":5,"nodeType":"179","messageId":"180","endLine":37,"endColumn":9},{"ruleId":"173","replacedBy":"181"},{"ruleId":"175","replacedBy":"182"},{"ruleId":"177","severity":1,"message":"178","line":25,"column":5,"nodeType":"179","messageId":"180","endLine":25,"endColumn":9},{"ruleId":"177","severity":1,"message":"183","line":4,"column":8,"nodeType":"179","messageId":"180","endLine":4,"endColumn":17},{"ruleId":"177","severity":1,"message":"184","line":5,"column":8,"nodeType":"179","messageId":"180","endLine":5,"endColumn":19},{"ruleId":"177","severity":1,"message":"185","line":6,"column":8,"nodeType":"179","messageId":"180","endLine":6,"endColumn":25},{"ruleId":"177","severity":1,"message":"186","line":7,"column":8,"nodeType":"179","messageId":"180","endLine":7,"endColumn":13},{"ruleId":"177","severity":1,"message":"187","line":12,"column":20,"nodeType":"179","messageId":"180","endLine":12,"endColumn":31},{"ruleId":"188","severity":1,"message":"189","line":17,"column":6,"nodeType":"190","endLine":17,"endColumn":16,"suggestions":"191"},{"ruleId":"177","severity":1,"message":"192","line":4,"column":3,"nodeType":"179","messageId":"180","endLine":4,"endColumn":20},{"ruleId":"177","severity":1,"message":"193","line":7,"column":3,"nodeType":"179","messageId":"180","endLine":7,"endColumn":15},{"ruleId":"177","severity":1,"message":"194","line":32,"column":5,"nodeType":"179","messageId":"180","endLine":32,"endColumn":13},{"ruleId":"177","severity":1,"message":"194","line":51,"column":5,"nodeType":"179","messageId":"180","endLine":51,"endColumn":13},{"ruleId":"177","severity":1,"message":"195","line":52,"column":5,"nodeType":"179","messageId":"180","endLine":52,"endColumn":14},{"ruleId":"177","severity":1,"message":"196","line":1,"column":10,"nodeType":"179","messageId":"180","endLine":1,"endColumn":18},{"ruleId":"188","severity":1,"message":"197","line":16,"column":3,"nodeType":"179","endLine":16,"endColumn":12,"suggestions":"198"},{"ruleId":"177","severity":1,"message":"199","line":2,"column":38,"nodeType":"179","messageId":"180","endLine":2,"endColumn":48},{"ruleId":"177","severity":1,"message":"199","line":1,"column":27,"nodeType":"179","messageId":"180","endLine":1,"endColumn":37},{"ruleId":"188","severity":1,"message":"200","line":45,"column":6,"nodeType":"190","endLine":45,"endColumn":8,"suggestions":"201"},{"ruleId":"188","severity":1,"message":"202","line":50,"column":6,"nodeType":"190","endLine":50,"endColumn":25,"suggestions":"203"},{"ruleId":"177","severity":1,"message":"204","line":5,"column":5,"nodeType":"179","messageId":"180","endLine":5,"endColumn":19},{"ruleId":"188","severity":1,"message":"205","line":12,"column":6,"nodeType":"190","endLine":12,"endColumn":8,"suggestions":"206"},{"ruleId":"177","severity":1,"message":"186","line":1,"column":8,"nodeType":"179","messageId":"180","endLine":1,"endColumn":13},{"ruleId":"188","severity":1,"message":"207","line":13,"column":6,"nodeType":"190","endLine":13,"endColumn":16,"suggestions":"208"},"no-native-reassign",["209"],"no-negated-in-lhs",["210"],"no-unused-vars","'role' is assigned a value but never used.","Identifier","unusedVar",["209"],["210"],"'Countdown' is defined but never used.","'ProjectForm' is defined but never used.","'SearchbarDropdown' is defined but never used.","'axios' is defined but never used.","'setClientId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'allProjects' and 'loadAllProject'. Either include them or remove the dependency array.","ArrayExpression",["211"],"'UPDATE_EXPERIENCE' is defined but never used.","'UPDATE_SKILL' is defined but never used.","'password' is assigned a value but never used.","'password2' is assigned a value but never used.","'Fragment' is defined but never used.","React Hook useEffect contains a call to 'setIsNew'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.location.state] as a second argument to the useEffect Hook.",["212"],"'useContext' is defined but never used.","React Hook useEffect has a missing dependency: 'calculateTimeLeft'. Either include it or remove the dependency array.",["213"],"React Hook useEffect has a missing dependency: 'endDate'. Either include it or remove the dependency array.",["214"],"'DELETE_PROJECT' is defined but never used.","React Hook useEffect has missing dependencies: 'offer' and 'props.location.state'. Either include them or remove the dependency array.",["215"],"React Hook useEffect has a missing dependency: 'loadAllProject'. Either include it or remove the dependency array.",["216"],"no-global-assign","no-unsafe-negation",{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},"Update the dependencies array to be: [allProjects, clientId, loadAllProject]",{"range":"229","text":"230"},"Add dependencies array: [props.location.state]",{"range":"231","text":"232"},"Update the dependencies array to be: [calculateTimeLeft]",{"range":"233","text":"234"},"Update the dependencies array to be: [calculateTimeLeft, endDate]",{"range":"235","text":"236"},"Update the dependencies array to be: [offer, props.location.state]",{"range":"237","text":"238"},"Update the dependencies array to be: [clientId, loadAllProject]",{"range":"239","text":"240"},[662,672],"[allProjects, clientId, loadAllProject]",[572,572],", [props.location.state]",[1196,1198],"[calculateTimeLeft]",[1283,1302],"[calculateTimeLeft, endDate]",[311,313],"[offer, props.location.state]",[482,492],"[clientId, loadAllProject]"]
[{"C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\index.js":"1","C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\App.js":"2","C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\utils\\setAuthToken.js":"3","C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\component\\layout\\Navbar.js":"4","C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\component\\auth\\Register.js":"5","C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\component\\pages\\Home.js":"6","C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\context\\auth\\AuthState.js":"7","C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\component\\auth\\Login.js":"8","C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\context\\auth\\authContext.js":"9","C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\context\\auth\\authReducer.js":"10","C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\context\\types.js":"11","C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\component\\forms\\CompanyForm.js":"12","C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\component\\forms\\ConsultantForm.js":"13","C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\component\\pages\\Project.js":"14","C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\component\\routing\\PrivateRoute.js":"15","C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\component\\forms\\ProjectForm.js":"16","C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\component\\Countdown.js":"17","C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\context\\countdown\\countdownContext.js":"18","C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\context\\countdown\\countdownState.js":"19","C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\context\\countdown\\countdownReducer.js":"20","C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\context\\auction\\AuctionContext.js":"21","C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\context\\auction\\AuctionState.js":"22","C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\context\\auction\\AuctionReducer.js":"23","C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\component\\forms\\ProjectOfferForm.js":"24","C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\component\\pages\\SearchbarDropdown.jsx":"25","C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\component\\pages\\Projects.jsx":"26","C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\component\\pages\\ProjectOffers.jsx":"27","C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\component\\pages\\ProjectOffer.jsx":"28","C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\component\\pages\\Success.js":"29","C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\component\\pages\\ClientUserProfile.js":"30","C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\component\\pages\\ConsultantUserProfile.js":"31","C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\context\\profile\\profileContext.js":"32","C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\context\\profile\\ProfileState.js":"33","C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\context\\profile\\profileReducer.js":"34"},{"size":174,"mtime":1616500009125,"results":"35","hashOfConfig":"36"},{"size":3190,"mtime":1619601849234,"results":"37","hashOfConfig":"36"},{"size":249,"mtime":1614721790000,"results":"38","hashOfConfig":"36"},{"size":2506,"mtime":1619602036140,"results":"39","hashOfConfig":"36"},{"size":2745,"mtime":1619601319625,"results":"40","hashOfConfig":"36"},{"size":706,"mtime":1618297466753,"results":"41","hashOfConfig":"36"},{"size":3343,"mtime":1619600985863,"results":"42","hashOfConfig":"36"},{"size":1665,"mtime":1615456782903,"results":"43","hashOfConfig":"36"},{"size":106,"mtime":1614721790000,"results":"44","hashOfConfig":"36"},{"size":1111,"mtime":1619600985864,"results":"45","hashOfConfig":"36"},{"size":887,"mtime":1619600985886,"results":"46","hashOfConfig":"36"},{"size":4385,"mtime":1616500009121,"results":"47","hashOfConfig":"36"},{"size":10549,"mtime":1617184876662,"results":"48","hashOfConfig":"36"},{"size":1382,"mtime":1619559738818,"results":"49","hashOfConfig":"36"},{"size":587,"mtime":1616755726265,"results":"50","hashOfConfig":"36"},{"size":4786,"mtime":1619559633012,"results":"51","hashOfConfig":"36"},{"size":1479,"mtime":1619561692268,"results":"52","hashOfConfig":"36"},{"size":119,"mtime":1618222999606,"results":"53","hashOfConfig":"36"},{"size":974,"mtime":1618299666339,"results":"54","hashOfConfig":"36"},{"size":308,"mtime":1618299247305,"results":"55","hashOfConfig":"36"},{"size":115,"mtime":1618223648283,"results":"56","hashOfConfig":"36"},{"size":1735,"mtime":1619004333426,"results":"57","hashOfConfig":"36"},{"size":691,"mtime":1618223644699,"results":"58","hashOfConfig":"36"},{"size":1721,"mtime":1619004445404,"results":"59","hashOfConfig":"36"},{"size":1553,"mtime":1619000055984,"results":"60","hashOfConfig":"36"},{"size":1089,"mtime":1619435003527,"results":"61","hashOfConfig":"36"},{"size":1281,"mtime":1619557464719,"results":"62","hashOfConfig":"36"},{"size":2107,"mtime":1619557505837,"results":"63","hashOfConfig":"36"},{"size":206,"mtime":1619600985863,"results":"64","hashOfConfig":"36"},{"size":7102,"mtime":1619600985862,"results":"65","hashOfConfig":"36"},{"size":14424,"mtime":1619600985862,"results":"66","hashOfConfig":"36"},{"size":117,"mtime":1619600985865,"results":"67","hashOfConfig":"36"},{"size":1346,"mtime":1619600985864,"results":"68","hashOfConfig":"36"},{"size":872,"mtime":1619600985865,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1o0qyb3",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"97"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"72"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"72"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"72"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"72"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"72"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"72"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"72"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\index.js",[],["151","152"],"C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\App.js",[],"C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\utils\\setAuthToken.js",[],["153","154"],"C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\component\\layout\\Navbar.js",[],"C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\component\\auth\\Register.js",[],"C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\component\\pages\\Home.js",[],"C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\context\\auth\\AuthState.js",[],"C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\component\\auth\\Login.js",[],"C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\context\\auth\\authContext.js",[],"C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\context\\auth\\authReducer.js",[],"C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\context\\types.js",[],"C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\component\\forms\\CompanyForm.js",["155"],"import React, { Fragment, useState } from 'react';\r\nimport ReactFlagsSelect from 'react-flags-select';\r\n\r\nconst CompanyForm = () => {\r\n  const [user, setUser] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    companyName: '',\r\n    email: '',\r\n    role: 'client',\r\n    password: '',\r\n    password2: '',\r\n    address: '',\r\n    zipCode: '',\r\n    city: '',\r\n    phoneNr: '',\r\n  });\r\n\r\n  const {\r\n    firstName,\r\n    lastName,\r\n    companyName,\r\n    email,\r\n    role,\r\n    password,\r\n    password2,\r\n    address,\r\n    zipCode,\r\n    city,\r\n    phoneNr,\r\n  } = user;\r\n\r\n  const [selected, setSelected] = useState('');\r\n\r\n  const onChange = (e) => setUser({ ...user, [e.target.name]: e.target.value });\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className='form-row'>\r\n        <div className='col'>\r\n          <label htmlFor='companyName'>Company Name</label>\r\n          <input\r\n            className='form-control'\r\n            type='text'\r\n            name='companyName'\r\n            value={companyName}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='form-row'>\r\n        <div className='col'>\r\n          <label htmlFor='firstName'>First Name</label>\r\n          <input\r\n            className='form-control'\r\n            type='text'\r\n            name='firstName'\r\n            value={firstName}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <div className='col'>\r\n          <label htmlFor='lastName'>Last Name</label>\r\n          <input\r\n            className='form-control'\r\n            type='text'\r\n            name='lastName'\r\n            value={lastName}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='form-row'>\r\n        <div className='col'>\r\n          <label htmlFor='email'>Email Address</label>\r\n          <input\r\n            className='form-control'\r\n            type='email'\r\n            name='email'\r\n            value={email}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className='form-row'>\r\n        <div className='col'>\r\n          <label htmlFor='password'>Password</label>\r\n          <input\r\n            className='form-control'\r\n            type='password'\r\n            name='password'\r\n            value={password}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='col'>\r\n          <label htmlFor='password2'>Confirm Password</label>\r\n          <input\r\n            className='form-control'\r\n            type='password2'\r\n            name='password2'\r\n            value={password2}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='form-row'>\r\n        <div className='col'>\r\n          <label htmlFor='address'>Address</label>\r\n          <input\r\n            className='form-control'\r\n            type='text'\r\n            name='address'\r\n            value={address}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='form-row'>\r\n        <div className='col'>\r\n          <label htmlFor='zipCode'>Postal Code</label>\r\n          <input\r\n            className='form-control'\r\n            type='text'\r\n            name='zipCode'\r\n            value={zipCode}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='col'>\r\n          <label htmlFor='city'>City</label>\r\n          <input\r\n            className='form-control'\r\n            type='text'\r\n            name='city'\r\n            value={city}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='col'>\r\n          <label htmlFor='country'>Country</label>\r\n          <ReactFlagsSelect\r\n            selected={selected}\r\n            onSelect={(code) => setSelected(code)}\r\n          />\r\n        </div>\r\n      </div>\r\n      {/* ToDo: Snygga till fältet med en landskodslista */}\r\n\r\n      <div className='form-row'>\r\n        <label htmlFor='phonenr'>Phone Number</label>\r\n        <input\r\n          className='form-control'\r\n          type='text'\r\n          name='phonenr'\r\n          value={phoneNr}\r\n          onChange={onChange}\r\n          required\r\n        />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default CompanyForm;\r\n",["156","157"],"C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\component\\forms\\ConsultantForm.js",["158","159","160","161","162"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport ReactFlagsSelect from 'react-flags-select';\r\n\r\nconst ConsultantForm = () => {\r\n  const initialState = {\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    role: 'consultant',\r\n    password: '',\r\n    password2: '',\r\n    address: '',\r\n    zipCode: '',\r\n    city: '',\r\n    phoneNr: '',\r\n    frontEnd: false,\r\n    backEnd: false,\r\n    forHire: false,\r\n    salary: '',\r\n    experiences: [],\r\n    languages: '',\r\n    skills: [],\r\n  };\r\n\r\n  const {\r\n    firstName,\r\n    lastName,\r\n    email,\r\n    role,\r\n    password,\r\n    password2,\r\n    address,\r\n    zipCode,\r\n    city,\r\n    phoneNr,\r\n    frontEnd,\r\n    backEnd,\r\n    forHire,\r\n    salary,\r\n    experiences,\r\n    languages,\r\n    skills,\r\n  } = initialState;\r\n\r\n  const [consultant, setConsultant] = useState(() => {\r\n    return initialState;\r\n  })\r\n  const [experience, setExperience] = useState('');\r\n  const [skill, setSkill] = useState('');\r\n\r\n  const [selected, setSelected] = useState('');\r\n\r\n  const handleChangeExperience = (e) => {\r\n    setExperience(e.target.value);\r\n  };\r\n\r\n  const handleAddExperience = () => {\r\n     const newConsultant = { ...consultant };\r\n    newConsultant.experiences = consultant.experiences.concat(experience);\r\n    setExperience('');\r\n    setConsultant(newConsultant);\r\n  };\r\n\r\n  const handleRemoveExperience = idx => () => {\r\n    const newConsultant = { ...consultant };\r\n    newConsultant.experiences = consultant.experiences.filter((s, sidx) => idx !== sidx);\r\n    setConsultant(newConsultant);\r\n  };\r\n\r\n  const handleChangeSkill = (e) => {\r\n    setSkill(e.target.value);\r\n  };\r\n\r\n  const handleAddSkills = () => {\r\n    const newConsultant = { ...consultant };\r\n    newConsultant.skills = consultant.skills.concat(skill);\r\n    setSkill('');\r\n    setConsultant(newConsultant);\r\n  };\r\n\r\n  const handleRemoveSkill = () => {};\r\n\r\n  const onChange = (e) =>\r\n    setConsultant({ ...consultant, [e.target.name]: e.target.value });\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className='form-group'>\r\n        <div className='form-row'>\r\n          <div className='col'>\r\n            <label htmlFor='firstName'>First Name</label>\r\n            <input\r\n              className='form-control'\r\n              type='text'\r\n              name='firstName'\r\n              value={firstName}\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n          <div className='col'>\r\n            <label htmlFor='lastName'>Last Name</label>\r\n            <input\r\n              className='form-control'\r\n              type='text'\r\n              name='lastName'\r\n              value={lastName}\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='form-row'>\r\n        <div className='col'>\r\n          <label htmlFor='email'>Email Address</label>\r\n          <input\r\n            className='form-control'\r\n            type='email'\r\n            name='email'\r\n            value={email}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className='form-row'>\r\n        <div className='col'>\r\n          <label htmlFor='password'>Password</label>\r\n          <input\r\n            className='form-control'\r\n            type='password'\r\n            name='password'\r\n            value={password}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='col'>\r\n          <label htmlFor='password2'>Confirm Password</label>\r\n          <input\r\n            className='form-control'\r\n            type='password2'\r\n            name='password2'\r\n            value={password2}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='form-row'>\r\n        <div className='col'>\r\n          <label htmlFor='address'>Address</label>\r\n          <input\r\n            className='form-control'\r\n            type='text'\r\n            name='address'\r\n            value={address}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='form-row'>\r\n        <div className='col'>\r\n          <label htmlFor='zipCode'>Postal Code</label>\r\n          <input\r\n            className='form-control'\r\n            type='text'\r\n            name='zipCode'\r\n            value={zipCode}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='col'>\r\n          <label htmlFor='city'>City</label>\r\n          <input\r\n            className='form-control'\r\n            type='text'\r\n            name='city'\r\n            value={city}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='col'>\r\n          <label htmlFor='country'>Country</label>\r\n          <ReactFlagsSelect\r\n            selected={selected}\r\n            onSelect={(code) => setSelected(code)}\r\n          />\r\n        </div>\r\n      </div>\r\n      {/* ToDo: Snygga till fältet med en landskodslista */}\r\n\r\n      <div className='form-row'>\r\n        <label htmlFor='phonenr'>Phone Number</label>\r\n        <input\r\n          className='form-control'\r\n          type='text'\r\n          name='phoneNr'\r\n          value={phoneNr}\r\n          onChange={onChange}\r\n          required\r\n        />\r\n      </div>\r\n      <div className='form-group'>\r\n        <div className='form-row'>\r\n          <div className='form-check form-check-inline'>\r\n            <input\r\n              className='form-check-input'\r\n              type='checkbox'\r\n              name='frontEnd'\r\n              value={frontEnd}\r\n              onChange={onChange}\r\n            />\r\n            <label class='form-check-label' htmlFor='frontEnd'>\r\n              Front End\r\n            </label>\r\n          </div>{' '}\r\n          <div className='form-check form-check-inline'>\r\n            <input\r\n              className='form-check-input'\r\n              type='checkbox'\r\n              name='backEnd'\r\n              value={backEnd}\r\n              onChange={onChange}\r\n            />\r\n            <label class='form-check-label' htmlFor='backEnd'>\r\n              Back End\r\n            </label>\r\n          </div>{' '}\r\n          <div className='form-check form-check-inline'>\r\n            <input\r\n              className='form-check-input'\r\n              type='checkbox'\r\n              name='forHire'\r\n              value={forHire}\r\n              onChange={onChange}\r\n            />\r\n            <label class='form-check-label' htmlFor='avalibleHire'>\r\n              Avalible For Hire\r\n            </label>\r\n          </div>\r\n          <div className='col'>\r\n            <label htmlFor='minSalary'>Minimum Salary</label>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              name='salary'\r\n              value={salary}\r\n              onChange={onChange}\r\n              placeholder='SEK'\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='form-row'>\r\n          <label htmlFor='skills'>Previous Experience:</label>\r\n          <div className='input-group mb-3'>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              name='experience'\r\n              value={experience}\r\n              placeholder='Add A Previous Experience'\r\n              onChange={handleChangeExperience}\r\n              aria-label='Add A Previous Experience'\r\n              aria-describedby='button-addon2'\r\n            />\r\n            <button\r\n              className='btn btn-outline-secondary'\r\n              type='button'\r\n              onClick={handleAddExperience}\r\n              id='button-addon2'\r\n            >\r\n              Add\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className='form-row'>\r\n          <ul className='list-group list-group-horizontal'>\r\n            {consultant.experiences.map((item, index) => (\r\n              <li\r\n                className='list-group-item'\r\n                key={index}\r\n                id={'experience' + index}\r\n              >\r\n                {item}\r\n                <button\r\n                  className='btn btn-danger btn-sm'\r\n                  onClick={handleRemoveExperience(index)}\r\n                >\r\n                  x\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <div className='form-row'>\r\n          <label htmlFor='skills'>Programming Language:</label>\r\n          <div className='input-group mb-3'>\r\n            <select\r\n              className='form-select'\r\n              aria-label='Add a Programming Language'\r\n            >\r\n              <option selected>Select a Programming Language</option>\r\n              <option value='1'>C#</option>\r\n              <option value='2'>C++</option>\r\n              <option value='3'>Java</option>\r\n              <option value='4'>Javascript</option>\r\n            </select>\r\n\r\n            <button\r\n              className='btn btn-outline-secondary'\r\n              type='button'\r\n              id='button-addon2'\r\n            >\r\n              Add\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='form-row'>\r\n          <label htmlFor='skills'>Special Skills:</label>\r\n          <div className='input-group mb-3'>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              name='skill'\r\n              value={skill}\r\n              onChange={handleChangeSkill}\r\n              placeholder='Add A Special Skill'\r\n              aria-label='Add A Special Skill'\r\n              aria-describedby='button-addon2'\r\n            />\r\n            <button\r\n              className='btn btn-outline-secondary'\r\n              onClick={handleAddSkills}\r\n              type='button'\r\n              id='button-addon2'\r\n            >\r\n              Add\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className='form-row'>\r\n          <ul className='list-group list-group-horizontal'>\r\n            {consultant.skills.map((item, index) => (\r\n              <li className='list-group-item' key={index} id={'skill' + index}>\r\n                {item}\r\n                <button\r\n                  className='btn btn-danger btn-sm'\r\n                  onClick={handleRemoveSkill}\r\n                >\r\n                  x\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ConsultantForm;\r\n","C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\component\\pages\\Project.js",["163","164","165","166","167"],"import React, { Fragment, useContext, useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AuctionContext from '../../context/auction/AuctionContext';\r\nimport Countdown from '../Countdown';\r\nimport ProjectForm from '../forms/ProjectForm';\r\nimport SearchbarDropdown from './SearchbarDropdown';\r\nimport axios from 'axios';\r\n\r\nconst Project = () => {\r\n  const auctionContext = useContext(AuctionContext);\r\n  const { loadAllProject, allProjects } = auctionContext;\r\n  const [clientId, setClientId] = useState(localStorage.getItem('userid'));\r\n\r\n  useEffect(() => {\r\n    loadAllProject(clientId);\r\n    console.log(allProjects);\r\n  }, [clientId]);\r\n  return (\r\n    <Fragment>\r\n      <Link to='/createProject'>\r\n        <p>Create new project</p>\r\n      </Link>\r\n      <Link to='/createProject'>\r\n        <p>My offers</p>\r\n      </Link>\r\n      <Countdown />\r\n      <div>\r\n        {allProjects ? (\r\n          allProjects.map((project) => (\r\n            <Link\r\n              to={{\r\n                pathname: '/createProject',\r\n                state: {\r\n                  linkedProject: project,\r\n                },\r\n              }}\r\n            >\r\n              <p>{project.projectName}</p>\r\n            </Link>\r\n          ))\r\n        ) : (\r\n          <p>No projects found</p>\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n","C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\component\\routing\\PrivateRoute.js",[],"C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\component\\forms\\ProjectForm.js",["168","169","170"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport AuctionContext from '../../context/auction/AuctionContext';\r\n\r\nconst ProjectForm = (props) => {\r\n  const auctionContext = useContext(AuctionContext);\r\n  const { saveProject } = auctionContext;\r\n\r\n  const [isNew, setIsNew] = useState(true);\r\n  const [isDistance, setIsDistance] = useState(false);\r\n  const [isCompanyHw, setIsComanyHw] = useState(false);\r\n  const [project, setProject] = useState(null);\r\n\r\n  const { register, handleSubmit, errors } = useForm();\r\n\r\n  useEffect(() => {\r\n    if (props.location.state != null) {\r\n      setProject(props.location.state.linkedProject);\r\n      setIsNew(false);\r\n    }\r\n\r\n    if (project) {\r\n      setIsDistance(project.distanceWork);\r\n      setIsComanyHw(project.companyHardware);\r\n    }\r\n  }, [project, isNew, props.location.state]);\r\n\r\n  const onSubmit = (data) => {\r\n    console.log(data, isNew);\r\n    saveProject(data, isNew);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      {!isNew && (\r\n        <input\r\n          type='hidden'\r\n          name='projectId'\r\n          value={project.projectId}\r\n          ref={register}\r\n        />\r\n      )}\r\n\r\n      <div className='container' style={{ maxWidth: '750px' }}>\r\n        <label htmlFor='projectName'>Project name</label>\r\n        <input\r\n          type='text'\r\n          className='form-control'\r\n          name='projectName'\r\n          defaultValue={isNew ? '' : project.projectName}\r\n          ref={register({ required: true })}\r\n        />\r\n        <label htmlFor='startDate'>Start date</label>\r\n        <input\r\n          type='date'\r\n          className='form-control'\r\n          name='startDate'\r\n          defaultValue={isNew ? '' : project.startDate}\r\n          ref={register({ required: true })}\r\n        />\r\n        <label htmlFor='endDate'>End date</label>\r\n        <input\r\n          type='date'\r\n          className='form-control'\r\n          name='endDate'\r\n          defaultValue={isNew ? '' : project.endDate}\r\n          ref={register({ required: true })}\r\n        />\r\n        <label htmlFor='workLoad'>Work load</label>\r\n        <input\r\n          type='number'\r\n          className='form-control'\r\n          min='0'\r\n          max='100'\r\n          name='workLoad'\r\n          defaultValue={isNew ? '' : project.workLoad}\r\n          ref={register({ required: true })}\r\n        />\r\n        <label htmlFor='description'>Description</label>\r\n        <input\r\n          type='text'\r\n          className='form-control'\r\n          name='description'\r\n          defaultValue={isNew ? '' : project.description}\r\n          ref={register({ required: true })}\r\n        />\r\n        <label htmlFor='located'>Location</label>\r\n        <input\r\n          type='text'\r\n          className='form-control'\r\n          name='located'\r\n          defaultValue={isNew ? '' : project.located}\r\n          ref={register({ required: true })}\r\n        />\r\n        <label htmlFor='distanceWork'>Distance work: </label>{' '}\r\n        <input\r\n          type='checkbox'\r\n          name='distanceWork'\r\n          defaultChecked={isNew ? '' : project.distanceWork}\r\n          ref={register}\r\n        />{' '}\r\n        <label htmlFor='companyHardware'>Company hardware: </label>{' '}\r\n        <input\r\n          type='checkbox'\r\n          name='companyHardware'\r\n          defaultChecked={isNew ? '' : project.companyHardware}\r\n          ref={register}\r\n        />\r\n        <div className='form-row'>\r\n          <label htmlFor='contactName'>Contact name</label>\r\n          <input\r\n            type='text'\r\n            className='form-control'\r\n            name='contactName'\r\n            defaultValue={isNew ? '' : project.contactName}\r\n            ref={register({ required: true })}\r\n          />\r\n          <label htmlFor='contactEmail'>Contact email</label>\r\n          <input\r\n            type='text'\r\n            className='form-control'\r\n            name='contactEmail'\r\n            defaultValue={isNew ? '' : project.contactEmail}\r\n            ref={register({ required: true })}\r\n          />\r\n          <label htmlFor='contactPhoneNumber'>Contact phoneNumber</label>\r\n          <input\r\n            type='text'\r\n            className='form-control'\r\n            name='contactPhoneNumber'\r\n            defaultValue={isNew ? '' : project.contactPhoneNumber}\r\n            ref={register({ required: true })}\r\n          />\r\n        </div>\r\n        <input\r\n          type='hidden'\r\n          name='userId'\r\n          readOnly\r\n          value={localStorage.getItem('userid')}\r\n          ref={register}\r\n        />\r\n      </div>\r\n      <button className='btn btn-success' type='submit'>\r\n        Save project\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\nexport default ProjectForm;\r\n","C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\component\\Countdown.js",["171","172","173"],"import React, { Fragment, useContext, useEffect, useState } from 'react';\r\nimport moment from 'moment';\r\nimport axios from 'axios';\r\n\r\nconst Countdown = () => {\r\n  const [endDate, setEndDate] = useState();\r\n\r\n  const [days, setDays] = useState('00');\r\n  const [hours, setHours] = useState('00');\r\n  const [minutes, setMinutes] = useState('00');\r\n  const [seconds, setSeconds] = useState('00');\r\n\r\n  const calculateTimeLeft = () => {\r\n    const then = moment(endDate);\r\n    const now = moment();\r\n    const countdown = moment(then - now);\r\n    const days = countdown.format('D');\r\n    const hours = countdown.format('HH');\r\n    const minutes = countdown.format('mm');\r\n    const seconds = countdown.format('ss');\r\n\r\n    setDays(days);\r\n    setHours(hours);\r\n    setMinutes(minutes);\r\n    setSeconds(seconds);\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get('/api/auction')\r\n      .then((res) => {\r\n        setEndDate(new Date(res.data.auctionEndDateTime));\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n    let intervalId;\r\n\r\n    intervalId = setInterval(() => {\r\n      calculateTimeLeft();\r\n    }, 1000);\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    calculateTimeLeft();\r\n    console.log(endDate);\r\n  }, [calculateTimeLeft]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <p>\r\n        {' '}\r\n        {days}:{hours}:{minutes}:{seconds}{' '}\r\n      </p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Countdown;\r\n","C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\context\\countdown\\countdownContext.js",[],"C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\context\\countdown\\countdownState.js",[],"C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\context\\countdown\\countdownReducer.js",[],"C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\context\\auction\\AuctionContext.js",[],"C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\context\\auction\\AuctionState.js",[],"C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\context\\auction\\AuctionReducer.js",["174"],"import {\r\n    LOAD_PROJECT,\r\n    LOAD_ALL_PROJECTS,\r\n    ADD_PROJECT,\r\n    DELETE_PROJECT\r\n  } from '../types';\r\n  \r\n  const auctionReducer = (state, action) => {\r\n    switch (action.type) {\r\n      case LOAD_PROJECT:\r\n  \r\n      return {\r\n        ...state,\r\n        project: action.payload,\r\n        loading: false\r\n      };\r\n\r\n      case LOAD_ALL_PROJECTS:\r\n  \r\n      return {\r\n        ...state,\r\n        allProjects: action.payload,\r\n        loading: false\r\n      };\r\n\r\n      case ADD_PROJECT:\r\n  \r\n      return {\r\n        ...state,\r\n        project: action.payload,\r\n        loading: false\r\n      };\r\n\r\n      default:\r\n      return state;\r\n    }\r\n  };\r\n  \r\n  export default auctionReducer;","C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\component\\forms\\ProjectOfferForm.js",["175","176"],"import { Fragment, useContext, useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport AuctionContext from '../../context/auction/AuctionContext';\r\n\r\nconst ProjectOfferForm = (props) => {\r\n  const auctionContext = useContext(AuctionContext);\r\n  const { sendOffer } = auctionContext;\r\n  const [isNew, setIsNew] = useState(true);\r\n\r\n  const { register, handleSubmit } = useForm();\r\n\r\n  const onSubmit = (data) => {\r\n    sendOffer(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.location.state != null) {\r\n      setIsNew(false);\r\n    }\r\n  });\r\n\r\n  console.log(props);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <label htmlFor='consultantId'>consultantId</label>\r\n      <input\r\n        type='text'\r\n        name='consultantId'\r\n        defaultValue={isNew ? '' : props.location.state.userId}\r\n        ref={register({ required: true })}\r\n      />\r\n\r\n      <label htmlFor='projectId'>projectId</label>\r\n      <input\r\n        type='text'\r\n        name='projectId'\r\n        defaultValue={isNew ? '' : props.location.state.projectId}\r\n        ref={register({ required: true })}\r\n      />\r\n\r\n      <label htmlFor='startTime'>startTime</label>\r\n      <input\r\n        type='date'\r\n        name='startTime'\r\n        defaultValue={isNew ? '' : ''}\r\n        ref={register({ required: true })}\r\n      />\r\n\r\n      <label htmlFor='bids'>bids</label>\r\n      <input\r\n        type='number'\r\n        min='0'\r\n        name='bids'\r\n        defaultValue={isNew ? '' : ''}\r\n        ref={register({ required: true })}\r\n      />\r\n      <button className='btn btn-success' type='submit'>\r\n        Send project offer\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\nexport default ProjectOfferForm;\r\n","C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\component\\pages\\SearchbarDropdown.jsx",[],"C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\component\\pages\\Projects.jsx",["177","178"],"import axios from 'axios';\r\nimport React, { Fragment, useContext, useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AuctionContext from '../../context/auction/AuctionContext';\r\n\r\nconst Projects = (props) => {\r\n  const [clientId] = useState(localStorage.getItem('userid'));\r\n  const auctionContext = useContext(AuctionContext);\r\n  const { loadAllProject, allProjects } = auctionContext;\r\n\r\n  useEffect(() => {\r\n    loadAllProject(clientId);\r\n  }, [clientId]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div>\r\n        {allProjects ? (\r\n          allProjects.map((project) => (\r\n            <Link\r\n              to={{\r\n                pathname: '/projectOfferForm',\r\n                state: {\r\n                  userId: props.location.user.userId,\r\n                  projectId: project.projectId,\r\n                },\r\n              }}\r\n            >\r\n              <p>{project.projectName}</p>\r\n            </Link>\r\n          ))\r\n        ) : (\r\n          <p>No projects found</p>\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\component\\pages\\ProjectOffers.jsx",["179"],"import axios from 'axios';\r\nimport React, { useState, useEffect, useContext, Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ProjectOffers = (props) => {\r\n  const [offers, setOffers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`/api/projectOffer/user/` + localStorage.getItem('userid'))\r\n      .then((res) => {\r\n        setOffers(res.data);\r\n      });\r\n  }, []);\r\n\r\n  console.log(offers);\r\n  return (\r\n    <Fragment>\r\n      {offers ? (\r\n        offers.map((offer) => (\r\n          <Link\r\n            to={{\r\n              pathname: '/ProjectOffer',\r\n              state: {\r\n                projectOffer: offer,\r\n              },\r\n            }}\r\n          >\r\n            <div key={offer.offerId}>\r\n              <p>Name: {offer.projectName}</p>\r\n              <p>Description: {offer.description}</p>\r\n              <p>Start date: {offer.startDate}</p>\r\n              <p>End date: {offer.endDate}</p>\r\n              {offer.bids.map((bid) => (\r\n                <Fragment>\r\n                  <p>Bid: {bid.price}</p>\r\n                </Fragment>\r\n              ))}\r\n            </div>\r\n          </Link>\r\n        ))\r\n      ) : (\r\n        <p>No projects offers found</p>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ProjectOffers;\r\n","C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\component\\pages\\ProjectOffer.jsx",["180"],"import axios from 'axios';\r\nimport { Fragment, useEffect, useState } from 'react';\r\n\r\nconst ProjectOffer = (props) => {\r\n  const [offer, setOffer] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (props.location.state) {\r\n      setOffer(props.location.state.projectOffer);\r\n      console.log(offer);\r\n    }\r\n  }, []);\r\n\r\n  const onAccept = () => {\r\n    axios\r\n      .post('/api/projectOffer/accepted/' + offer.projectOfferId)\r\n      .then((res) => {\r\n        setOffer({ ...offer, accepted: res.data.accepted });\r\n      })\r\n      .catch((error) => {\r\n        console.log(console.log(error));\r\n      });\r\n  };\r\n\r\n  const onReject = () => {\r\n    axios\r\n      .post('/api/projectOffer/rejected/' + offer.projectOfferId)\r\n      .then((res) => {\r\n        setOffer({ ...offer, rejected: res.data.rejected });\r\n      })\r\n      .catch((error) => {\r\n        console.log(console.log(error));\r\n      });\r\n  };\r\n\r\n  console.log(offer);\r\n\r\n  return (\r\n    <Fragment>\r\n      {offer ? (\r\n        <Fragment>\r\n          <p>Project name: {offer.projectName}</p>\r\n          <p>Start date: {offer.startDate}</p>\r\n          <p>End date: {offer.endDate}</p>\r\n          <p>Workload: {offer.workLoad}</p>\r\n          <p>Description: {offer.description}</p>\r\n          <p>Located: {offer.located}</p>\r\n          <p>Distance work: {offer.distanceWork ? 'Yes' : 'No'}</p>\r\n          <p>Company hardware: {offer.companyHardware ? 'Yes' : 'No'}</p>\r\n          <p>Contact name: {offer.contactName}</p>\r\n          <p>Contact email: {offer.contactEmail}</p>\r\n          <p>Contact phone number: {offer.contactPhoneNumber}</p>\r\n\r\n          {offer.accepted || offer.rejected ? (\r\n            offer.accepted ? (\r\n              <p>Offer is accepted</p>\r\n            ) : (\r\n              <p>Offer is rejected</p>\r\n            )\r\n          ) : (\r\n            <div>\r\n              <button onClick={onAccept}>Accept</button>\r\n              <button onClick={onReject}>Reject</button>\r\n            </div>\r\n          )}\r\n        </Fragment>\r\n      ) : (\r\n        <p>No found Offer</p>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ProjectOffer;\r\n","C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\component\\pages\\Success.js",[],"C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\component\\pages\\ClientUserProfile.js",[],"C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\component\\pages\\ConsultantUserProfile.js",[],"C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\context\\profile\\profileContext.js",[],"C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\context\\profile\\ProfileState.js",[],"C:\\Users\\Adam\\Desktop\\swcgauction\\client\\src\\context\\profile\\profileReducer.js",["181","182"],{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","replacedBy":"186"},{"ruleId":"183","replacedBy":"187"},{"ruleId":"185","replacedBy":"188"},{"ruleId":"189","severity":1,"message":"190","line":24,"column":5,"nodeType":"191","messageId":"192","endLine":24,"endColumn":9},{"ruleId":"183","replacedBy":"193"},{"ruleId":"185","replacedBy":"194"},{"ruleId":"189","severity":1,"message":"195","line":1,"column":37,"nodeType":"191","messageId":"192","endLine":1,"endColumn":46},{"ruleId":"189","severity":1,"message":"190","line":29,"column":5,"nodeType":"191","messageId":"192","endLine":29,"endColumn":9},{"ruleId":"189","severity":1,"message":"196","line":40,"column":5,"nodeType":"191","messageId":"192","endLine":40,"endColumn":16},{"ruleId":"189","severity":1,"message":"197","line":41,"column":5,"nodeType":"191","messageId":"192","endLine":41,"endColumn":14},{"ruleId":"189","severity":1,"message":"198","line":42,"column":5,"nodeType":"191","messageId":"192","endLine":42,"endColumn":11},{"ruleId":"189","severity":1,"message":"199","line":5,"column":8,"nodeType":"191","messageId":"192","endLine":5,"endColumn":19},{"ruleId":"189","severity":1,"message":"200","line":6,"column":8,"nodeType":"191","messageId":"192","endLine":6,"endColumn":25},{"ruleId":"189","severity":1,"message":"201","line":7,"column":8,"nodeType":"191","messageId":"192","endLine":7,"endColumn":13},{"ruleId":"189","severity":1,"message":"202","line":12,"column":20,"nodeType":"191","messageId":"192","endLine":12,"endColumn":31},{"ruleId":"203","severity":1,"message":"204","line":17,"column":6,"nodeType":"205","endLine":17,"endColumn":16,"suggestions":"206"},{"ruleId":"189","severity":1,"message":"207","line":10,"column":10,"nodeType":"191","messageId":"192","endLine":10,"endColumn":20},{"ruleId":"189","severity":1,"message":"208","line":11,"column":10,"nodeType":"191","messageId":"192","endLine":11,"endColumn":21},{"ruleId":"189","severity":1,"message":"209","line":14,"column":35,"nodeType":"191","messageId":"192","endLine":14,"endColumn":41},{"ruleId":"189","severity":1,"message":"210","line":1,"column":27,"nodeType":"191","messageId":"192","endLine":1,"endColumn":37},{"ruleId":"203","severity":1,"message":"211","line":45,"column":6,"nodeType":"205","endLine":45,"endColumn":8,"suggestions":"212"},{"ruleId":"203","severity":1,"message":"213","line":50,"column":6,"nodeType":"205","endLine":50,"endColumn":25,"suggestions":"214"},{"ruleId":"189","severity":1,"message":"215","line":5,"column":5,"nodeType":"191","messageId":"192","endLine":5,"endColumn":19},{"ruleId":"189","severity":1,"message":"216","line":1,"column":10,"nodeType":"191","messageId":"192","endLine":1,"endColumn":18},{"ruleId":"203","severity":1,"message":"217","line":16,"column":3,"nodeType":"191","endLine":16,"endColumn":12,"suggestions":"218"},{"ruleId":"189","severity":1,"message":"201","line":1,"column":8,"nodeType":"191","messageId":"192","endLine":1,"endColumn":13},{"ruleId":"203","severity":1,"message":"219","line":13,"column":6,"nodeType":"205","endLine":13,"endColumn":16,"suggestions":"220"},{"ruleId":"189","severity":1,"message":"210","line":2,"column":38,"nodeType":"191","messageId":"192","endLine":2,"endColumn":48},{"ruleId":"203","severity":1,"message":"221","line":12,"column":6,"nodeType":"205","endLine":12,"endColumn":8,"suggestions":"222"},{"ruleId":"189","severity":1,"message":"223","line":4,"column":3,"nodeType":"191","messageId":"192","endLine":4,"endColumn":20},{"ruleId":"189","severity":1,"message":"224","line":7,"column":3,"nodeType":"191","messageId":"192","endLine":7,"endColumn":15},"no-native-reassign",["225"],"no-negated-in-lhs",["226"],["225"],["226"],"no-unused-vars","'role' is assigned a value but never used.","Identifier","unusedVar",["225"],["226"],"'useEffect' is defined but never used.","'experiences' is assigned a value but never used.","'languages' is assigned a value but never used.","'skills' is assigned a value but never used.","'ProjectForm' is defined but never used.","'SearchbarDropdown' is defined but never used.","'axios' is defined but never used.","'setClientId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'allProjects' and 'loadAllProject'. Either include them or remove the dependency array.","ArrayExpression",["227"],"'isDistance' is assigned a value but never used.","'isCompanyHw' is assigned a value but never used.","'errors' is assigned a value but never used.","'useContext' is defined but never used.","React Hook useEffect has a missing dependency: 'calculateTimeLeft'. Either include it or remove the dependency array.",["228"],"React Hook useEffect has a missing dependency: 'endDate'. Either include it or remove the dependency array.",["229"],"'DELETE_PROJECT' is defined but never used.","'Fragment' is defined but never used.","React Hook useEffect contains a call to 'setIsNew'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.location.state] as a second argument to the useEffect Hook.",["230"],"React Hook useEffect has a missing dependency: 'loadAllProject'. Either include it or remove the dependency array.",["231"],"React Hook useEffect has missing dependencies: 'offer' and 'props.location.state'. Either include them or remove the dependency array.",["232"],"'UPDATE_EXPERIENCE' is defined but never used.","'UPDATE_SKILL' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},"Update the dependencies array to be: [allProjects, clientId, loadAllProject]",{"range":"245","text":"246"},"Update the dependencies array to be: [calculateTimeLeft]",{"range":"247","text":"248"},"Update the dependencies array to be: [calculateTimeLeft, endDate]",{"range":"249","text":"250"},"Add dependencies array: [props.location.state]",{"range":"251","text":"252"},"Update the dependencies array to be: [clientId, loadAllProject]",{"range":"253","text":"254"},"Update the dependencies array to be: [offer, props.location.state]",{"range":"255","text":"256"},[662,672],"[allProjects, clientId, loadAllProject]",[1196,1198],"[calculateTimeLeft]",[1283,1302],"[calculateTimeLeft, endDate]",[572,572],", [props.location.state]",[482,492],"[clientId, loadAllProject]",[311,313],"[offer, props.location.state]"]